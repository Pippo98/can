// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bms.proto

#include "bms.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace bms {
PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD0::BOARD_STATUS_CELLBOARD0(
    ::_pbi::ConstantInitialized)
  : errors_(0u)
  , balancing_status_(0)

  , _inner_timestamp_(uint64_t{0u}){}
struct BOARD_STATUS_CELLBOARD0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BOARD_STATUS_CELLBOARD0DefaultTypeInternal() {}
  union {
    BOARD_STATUS_CELLBOARD0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BOARD_STATUS_CELLBOARD0DefaultTypeInternal _BOARD_STATUS_CELLBOARD0_default_instance_;
PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD1::BOARD_STATUS_CELLBOARD1(
    ::_pbi::ConstantInitialized)
  : errors_(0u)
  , balancing_status_(0)

  , _inner_timestamp_(uint64_t{0u}){}
struct BOARD_STATUS_CELLBOARD1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BOARD_STATUS_CELLBOARD1DefaultTypeInternal() {}
  union {
    BOARD_STATUS_CELLBOARD1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BOARD_STATUS_CELLBOARD1DefaultTypeInternal _BOARD_STATUS_CELLBOARD1_default_instance_;
PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD2::BOARD_STATUS_CELLBOARD2(
    ::_pbi::ConstantInitialized)
  : errors_(0u)
  , balancing_status_(0)

  , _inner_timestamp_(uint64_t{0u}){}
struct BOARD_STATUS_CELLBOARD2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BOARD_STATUS_CELLBOARD2DefaultTypeInternal() {}
  union {
    BOARD_STATUS_CELLBOARD2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BOARD_STATUS_CELLBOARD2DefaultTypeInternal _BOARD_STATUS_CELLBOARD2_default_instance_;
PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD3::BOARD_STATUS_CELLBOARD3(
    ::_pbi::ConstantInitialized)
  : errors_(0u)
  , balancing_status_(0)

  , _inner_timestamp_(uint64_t{0u}){}
struct BOARD_STATUS_CELLBOARD3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BOARD_STATUS_CELLBOARD3DefaultTypeInternal() {}
  union {
    BOARD_STATUS_CELLBOARD3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BOARD_STATUS_CELLBOARD3DefaultTypeInternal _BOARD_STATUS_CELLBOARD3_default_instance_;
PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD4::BOARD_STATUS_CELLBOARD4(
    ::_pbi::ConstantInitialized)
  : errors_(0u)
  , balancing_status_(0)

  , _inner_timestamp_(uint64_t{0u}){}
struct BOARD_STATUS_CELLBOARD4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD4DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BOARD_STATUS_CELLBOARD4DefaultTypeInternal() {}
  union {
    BOARD_STATUS_CELLBOARD4 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BOARD_STATUS_CELLBOARD4DefaultTypeInternal _BOARD_STATUS_CELLBOARD4_default_instance_;
PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD5::BOARD_STATUS_CELLBOARD5(
    ::_pbi::ConstantInitialized)
  : errors_(0u)
  , balancing_status_(0)

  , _inner_timestamp_(uint64_t{0u}){}
struct BOARD_STATUS_CELLBOARD5DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BOARD_STATUS_CELLBOARD5DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BOARD_STATUS_CELLBOARD5DefaultTypeInternal() {}
  union {
    BOARD_STATUS_CELLBOARD5 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BOARD_STATUS_CELLBOARD5DefaultTypeInternal _BOARD_STATUS_CELLBOARD5_default_instance_;
PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD0::TEMPERATURES_CELLBOARD0(
    ::_pbi::ConstantInitialized)
  : start_index_(0u)
  , temp0_(0u)
  , temp1_(0u)
  , temp2_(0u)
  , temp3_(0u)
  , temp4_(0u)
  , _inner_timestamp_(uint64_t{0u})
  , temp5_(0u){}
struct TEMPERATURES_CELLBOARD0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TEMPERATURES_CELLBOARD0DefaultTypeInternal() {}
  union {
    TEMPERATURES_CELLBOARD0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TEMPERATURES_CELLBOARD0DefaultTypeInternal _TEMPERATURES_CELLBOARD0_default_instance_;
PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD1::TEMPERATURES_CELLBOARD1(
    ::_pbi::ConstantInitialized)
  : start_index_(0u)
  , temp0_(0u)
  , temp1_(0u)
  , temp2_(0u)
  , temp3_(0u)
  , temp4_(0u)
  , _inner_timestamp_(uint64_t{0u})
  , temp5_(0u){}
struct TEMPERATURES_CELLBOARD1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TEMPERATURES_CELLBOARD1DefaultTypeInternal() {}
  union {
    TEMPERATURES_CELLBOARD1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TEMPERATURES_CELLBOARD1DefaultTypeInternal _TEMPERATURES_CELLBOARD1_default_instance_;
PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD2::TEMPERATURES_CELLBOARD2(
    ::_pbi::ConstantInitialized)
  : start_index_(0u)
  , temp0_(0u)
  , temp1_(0u)
  , temp2_(0u)
  , temp3_(0u)
  , temp4_(0u)
  , _inner_timestamp_(uint64_t{0u})
  , temp5_(0u){}
struct TEMPERATURES_CELLBOARD2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TEMPERATURES_CELLBOARD2DefaultTypeInternal() {}
  union {
    TEMPERATURES_CELLBOARD2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TEMPERATURES_CELLBOARD2DefaultTypeInternal _TEMPERATURES_CELLBOARD2_default_instance_;
PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD3::TEMPERATURES_CELLBOARD3(
    ::_pbi::ConstantInitialized)
  : start_index_(0u)
  , temp0_(0u)
  , temp1_(0u)
  , temp2_(0u)
  , temp3_(0u)
  , temp4_(0u)
  , _inner_timestamp_(uint64_t{0u})
  , temp5_(0u){}
struct TEMPERATURES_CELLBOARD3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TEMPERATURES_CELLBOARD3DefaultTypeInternal() {}
  union {
    TEMPERATURES_CELLBOARD3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TEMPERATURES_CELLBOARD3DefaultTypeInternal _TEMPERATURES_CELLBOARD3_default_instance_;
PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD4::TEMPERATURES_CELLBOARD4(
    ::_pbi::ConstantInitialized)
  : start_index_(0u)
  , temp0_(0u)
  , temp1_(0u)
  , temp2_(0u)
  , temp3_(0u)
  , temp4_(0u)
  , _inner_timestamp_(uint64_t{0u})
  , temp5_(0u){}
struct TEMPERATURES_CELLBOARD4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD4DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TEMPERATURES_CELLBOARD4DefaultTypeInternal() {}
  union {
    TEMPERATURES_CELLBOARD4 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TEMPERATURES_CELLBOARD4DefaultTypeInternal _TEMPERATURES_CELLBOARD4_default_instance_;
PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD5::TEMPERATURES_CELLBOARD5(
    ::_pbi::ConstantInitialized)
  : start_index_(0u)
  , temp0_(0u)
  , temp1_(0u)
  , temp2_(0u)
  , temp3_(0u)
  , temp4_(0u)
  , _inner_timestamp_(uint64_t{0u})
  , temp5_(0u){}
struct TEMPERATURES_CELLBOARD5DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TEMPERATURES_CELLBOARD5DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TEMPERATURES_CELLBOARD5DefaultTypeInternal() {}
  union {
    TEMPERATURES_CELLBOARD5 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TEMPERATURES_CELLBOARD5DefaultTypeInternal _TEMPERATURES_CELLBOARD5_default_instance_;
PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD0::VOLTAGES_CELLBOARD0(
    ::_pbi::ConstantInitialized)
  : voltage0_(0u)
  , voltage1_(0u)
  , voltage2_(0u)
  , start_index_(0u)
  , _inner_timestamp_(uint64_t{0u}){}
struct VOLTAGES_CELLBOARD0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VOLTAGES_CELLBOARD0DefaultTypeInternal() {}
  union {
    VOLTAGES_CELLBOARD0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VOLTAGES_CELLBOARD0DefaultTypeInternal _VOLTAGES_CELLBOARD0_default_instance_;
PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD1::VOLTAGES_CELLBOARD1(
    ::_pbi::ConstantInitialized)
  : voltage0_(0u)
  , voltage1_(0u)
  , voltage2_(0u)
  , start_index_(0u)
  , _inner_timestamp_(uint64_t{0u}){}
struct VOLTAGES_CELLBOARD1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VOLTAGES_CELLBOARD1DefaultTypeInternal() {}
  union {
    VOLTAGES_CELLBOARD1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VOLTAGES_CELLBOARD1DefaultTypeInternal _VOLTAGES_CELLBOARD1_default_instance_;
PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD2::VOLTAGES_CELLBOARD2(
    ::_pbi::ConstantInitialized)
  : voltage0_(0u)
  , voltage1_(0u)
  , voltage2_(0u)
  , start_index_(0u)
  , _inner_timestamp_(uint64_t{0u}){}
struct VOLTAGES_CELLBOARD2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VOLTAGES_CELLBOARD2DefaultTypeInternal() {}
  union {
    VOLTAGES_CELLBOARD2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VOLTAGES_CELLBOARD2DefaultTypeInternal _VOLTAGES_CELLBOARD2_default_instance_;
PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD3::VOLTAGES_CELLBOARD3(
    ::_pbi::ConstantInitialized)
  : voltage0_(0u)
  , voltage1_(0u)
  , voltage2_(0u)
  , start_index_(0u)
  , _inner_timestamp_(uint64_t{0u}){}
struct VOLTAGES_CELLBOARD3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VOLTAGES_CELLBOARD3DefaultTypeInternal() {}
  union {
    VOLTAGES_CELLBOARD3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VOLTAGES_CELLBOARD3DefaultTypeInternal _VOLTAGES_CELLBOARD3_default_instance_;
PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD4::VOLTAGES_CELLBOARD4(
    ::_pbi::ConstantInitialized)
  : voltage0_(0u)
  , voltage1_(0u)
  , voltage2_(0u)
  , start_index_(0u)
  , _inner_timestamp_(uint64_t{0u}){}
struct VOLTAGES_CELLBOARD4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD4DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VOLTAGES_CELLBOARD4DefaultTypeInternal() {}
  union {
    VOLTAGES_CELLBOARD4 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VOLTAGES_CELLBOARD4DefaultTypeInternal _VOLTAGES_CELLBOARD4_default_instance_;
PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD5::VOLTAGES_CELLBOARD5(
    ::_pbi::ConstantInitialized)
  : voltage0_(0u)
  , voltage1_(0u)
  , voltage2_(0u)
  , start_index_(0u)
  , _inner_timestamp_(uint64_t{0u}){}
struct VOLTAGES_CELLBOARD5DefaultTypeInternal {
  PROTOBUF_CONSTEXPR VOLTAGES_CELLBOARD5DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VOLTAGES_CELLBOARD5DefaultTypeInternal() {}
  union {
    VOLTAGES_CELLBOARD5 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VOLTAGES_CELLBOARD5DefaultTypeInternal _VOLTAGES_CELLBOARD5_default_instance_;
PROTOBUF_CONSTEXPR BALANCING::BALANCING(
    ::_pbi::ConstantInitialized)
  : cells_(uint64_t{0u})
  , _inner_timestamp_(uint64_t{0u})
  , board_index_(0u){}
struct BALANCINGDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BALANCINGDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BALANCINGDefaultTypeInternal() {}
  union {
    BALANCING _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BALANCINGDefaultTypeInternal _BALANCING_default_instance_;
PROTOBUF_CONSTEXPR FW_UPDATE::FW_UPDATE(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u})
  , board_index_(0u){}
struct FW_UPDATEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FW_UPDATEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FW_UPDATEDefaultTypeInternal() {}
  union {
    FW_UPDATE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FW_UPDATEDefaultTypeInternal _FW_UPDATE_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_0_TXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_0_TXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_0_TXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_0_TX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_0_TXDefaultTypeInternal _FLASH_CELLBOARD_0_TX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_0_RXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_0_RXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_0_RXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_0_RX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_0_RXDefaultTypeInternal _FLASH_CELLBOARD_0_RX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_1_TXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_1_TXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_1_TXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_1_TX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_1_TXDefaultTypeInternal _FLASH_CELLBOARD_1_TX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_1_RXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_1_RXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_1_RXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_1_RX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_1_RXDefaultTypeInternal _FLASH_CELLBOARD_1_RX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_2_TXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_2_TXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_2_TXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_2_TX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_2_TXDefaultTypeInternal _FLASH_CELLBOARD_2_TX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_2_RXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_2_RXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_2_RXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_2_RX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_2_RXDefaultTypeInternal _FLASH_CELLBOARD_2_RX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_3_TXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_3_TXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_3_TXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_3_TX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_3_TXDefaultTypeInternal _FLASH_CELLBOARD_3_TX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_3_RXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_3_RXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_3_RXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_3_RX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_3_RXDefaultTypeInternal _FLASH_CELLBOARD_3_RX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_4_TXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_4_TXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_4_TXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_4_TX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_4_TXDefaultTypeInternal _FLASH_CELLBOARD_4_TX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_4_RXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_4_RXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_4_RXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_4_RX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_4_RXDefaultTypeInternal _FLASH_CELLBOARD_4_RX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_5_TXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_5_TXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_5_TXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_5_TX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_5_TXDefaultTypeInternal _FLASH_CELLBOARD_5_TX_default_instance_;
PROTOBUF_CONSTEXPR FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX(
    ::_pbi::ConstantInitialized)
  : _inner_timestamp_(uint64_t{0u}){}
struct FLASH_CELLBOARD_5_RXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FLASH_CELLBOARD_5_RXDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FLASH_CELLBOARD_5_RXDefaultTypeInternal() {}
  union {
    FLASH_CELLBOARD_5_RX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FLASH_CELLBOARD_5_RXDefaultTypeInternal _FLASH_CELLBOARD_5_RX_default_instance_;
PROTOBUF_CONSTEXPR Pack::Pack(
    ::_pbi::ConstantInitialized)
  : board_status_cellboard0_()
  , board_status_cellboard1_()
  , board_status_cellboard2_()
  , board_status_cellboard3_()
  , board_status_cellboard4_()
  , board_status_cellboard5_()
  , temperatures_cellboard0_()
  , temperatures_cellboard1_()
  , temperatures_cellboard2_()
  , temperatures_cellboard3_()
  , temperatures_cellboard4_()
  , temperatures_cellboard5_()
  , voltages_cellboard0_()
  , voltages_cellboard1_()
  , voltages_cellboard2_()
  , voltages_cellboard3_()
  , voltages_cellboard4_()
  , voltages_cellboard5_()
  , balancing_()
  , fw_update_()
  , flash_cellboard_0_tx_()
  , flash_cellboard_0_rx_()
  , flash_cellboard_1_tx_()
  , flash_cellboard_1_rx_()
  , flash_cellboard_2_tx_()
  , flash_cellboard_2_rx_()
  , flash_cellboard_3_tx_()
  , flash_cellboard_3_rx_()
  , flash_cellboard_4_tx_()
  , flash_cellboard_4_rx_()
  , flash_cellboard_5_tx_()
  , flash_cellboard_5_rx_(){}
struct PackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackDefaultTypeInternal() {}
  union {
    Pack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackDefaultTypeInternal _Pack_default_instance_;
}  // namespace bms
static ::_pb::Metadata file_level_metadata_bms_2eproto[33];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_bms_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_bms_2eproto = nullptr;

const uint32_t TableStruct_bms_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD0, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD0, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD0, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD1, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD1, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD1, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD2, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD2, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD2, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD3, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD3, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD3, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD4, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD4, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD4, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD5, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD5, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD5, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS_CELLBOARD5, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, temp4_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, temp5_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD0, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, temp4_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, temp5_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD1, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, temp4_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, temp5_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD2, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, temp4_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, temp5_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD3, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, temp4_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, temp5_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD4, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, temp4_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, temp5_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES_CELLBOARD5, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD0, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD0, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD0, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD0, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD0, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD1, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD1, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD1, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD1, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD1, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD2, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD2, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD2, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD2, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD2, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD3, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD3, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD3, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD3, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD3, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD4, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD4, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD4, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD4, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD4, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD5, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD5, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD5, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD5, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD5, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES_CELLBOARD5, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, cells_),
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, board_index_),
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, board_index_),
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::Pack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_cellboard0_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_cellboard1_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_cellboard2_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_cellboard3_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_cellboard4_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_cellboard5_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_cellboard0_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_cellboard1_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_cellboard2_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_cellboard3_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_cellboard4_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_cellboard5_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_cellboard0_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_cellboard1_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_cellboard2_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_cellboard3_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_cellboard4_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_cellboard5_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, balancing_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, fw_update_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_0_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_0_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_1_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_1_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_2_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_2_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_3_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_3_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_4_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_4_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_5_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_5_rx_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::bms::BOARD_STATUS_CELLBOARD0)},
  { 9, -1, -1, sizeof(::bms::BOARD_STATUS_CELLBOARD1)},
  { 18, -1, -1, sizeof(::bms::BOARD_STATUS_CELLBOARD2)},
  { 27, -1, -1, sizeof(::bms::BOARD_STATUS_CELLBOARD3)},
  { 36, -1, -1, sizeof(::bms::BOARD_STATUS_CELLBOARD4)},
  { 45, -1, -1, sizeof(::bms::BOARD_STATUS_CELLBOARD5)},
  { 54, -1, -1, sizeof(::bms::TEMPERATURES_CELLBOARD0)},
  { 68, -1, -1, sizeof(::bms::TEMPERATURES_CELLBOARD1)},
  { 82, -1, -1, sizeof(::bms::TEMPERATURES_CELLBOARD2)},
  { 96, -1, -1, sizeof(::bms::TEMPERATURES_CELLBOARD3)},
  { 110, -1, -1, sizeof(::bms::TEMPERATURES_CELLBOARD4)},
  { 124, -1, -1, sizeof(::bms::TEMPERATURES_CELLBOARD5)},
  { 138, -1, -1, sizeof(::bms::VOLTAGES_CELLBOARD0)},
  { 149, -1, -1, sizeof(::bms::VOLTAGES_CELLBOARD1)},
  { 160, -1, -1, sizeof(::bms::VOLTAGES_CELLBOARD2)},
  { 171, -1, -1, sizeof(::bms::VOLTAGES_CELLBOARD3)},
  { 182, -1, -1, sizeof(::bms::VOLTAGES_CELLBOARD4)},
  { 193, -1, -1, sizeof(::bms::VOLTAGES_CELLBOARD5)},
  { 204, -1, -1, sizeof(::bms::BALANCING)},
  { 213, -1, -1, sizeof(::bms::FW_UPDATE)},
  { 221, -1, -1, sizeof(::bms::FLASH_CELLBOARD_0_TX)},
  { 228, -1, -1, sizeof(::bms::FLASH_CELLBOARD_0_RX)},
  { 235, -1, -1, sizeof(::bms::FLASH_CELLBOARD_1_TX)},
  { 242, -1, -1, sizeof(::bms::FLASH_CELLBOARD_1_RX)},
  { 249, -1, -1, sizeof(::bms::FLASH_CELLBOARD_2_TX)},
  { 256, -1, -1, sizeof(::bms::FLASH_CELLBOARD_2_RX)},
  { 263, -1, -1, sizeof(::bms::FLASH_CELLBOARD_3_TX)},
  { 270, -1, -1, sizeof(::bms::FLASH_CELLBOARD_3_RX)},
  { 277, -1, -1, sizeof(::bms::FLASH_CELLBOARD_4_TX)},
  { 284, -1, -1, sizeof(::bms::FLASH_CELLBOARD_4_RX)},
  { 291, -1, -1, sizeof(::bms::FLASH_CELLBOARD_5_TX)},
  { 298, -1, -1, sizeof(::bms::FLASH_CELLBOARD_5_RX)},
  { 305, -1, -1, sizeof(::bms::Pack)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::bms::_BOARD_STATUS_CELLBOARD0_default_instance_._instance,
  &::bms::_BOARD_STATUS_CELLBOARD1_default_instance_._instance,
  &::bms::_BOARD_STATUS_CELLBOARD2_default_instance_._instance,
  &::bms::_BOARD_STATUS_CELLBOARD3_default_instance_._instance,
  &::bms::_BOARD_STATUS_CELLBOARD4_default_instance_._instance,
  &::bms::_BOARD_STATUS_CELLBOARD5_default_instance_._instance,
  &::bms::_TEMPERATURES_CELLBOARD0_default_instance_._instance,
  &::bms::_TEMPERATURES_CELLBOARD1_default_instance_._instance,
  &::bms::_TEMPERATURES_CELLBOARD2_default_instance_._instance,
  &::bms::_TEMPERATURES_CELLBOARD3_default_instance_._instance,
  &::bms::_TEMPERATURES_CELLBOARD4_default_instance_._instance,
  &::bms::_TEMPERATURES_CELLBOARD5_default_instance_._instance,
  &::bms::_VOLTAGES_CELLBOARD0_default_instance_._instance,
  &::bms::_VOLTAGES_CELLBOARD1_default_instance_._instance,
  &::bms::_VOLTAGES_CELLBOARD2_default_instance_._instance,
  &::bms::_VOLTAGES_CELLBOARD3_default_instance_._instance,
  &::bms::_VOLTAGES_CELLBOARD4_default_instance_._instance,
  &::bms::_VOLTAGES_CELLBOARD5_default_instance_._instance,
  &::bms::_BALANCING_default_instance_._instance,
  &::bms::_FW_UPDATE_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_0_TX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_0_RX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_1_TX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_1_RX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_2_TX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_2_RX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_3_TX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_3_RX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_4_TX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_4_RX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_5_TX_default_instance_._instance,
  &::bms::_FLASH_CELLBOARD_5_RX_default_instance_._instance,
  &::bms::_Pack_default_instance_._instance,
};

const char descriptor_table_protodef_bms_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tbms.proto\022\003bms\"s\n\027BOARD_STATUS_CELLBOA"
  "RD0\022\016\n\006errors\030\001 \001(\r\022.\n\020balancing_status\030"
  "\002 \001(\0162\024.bms.BalancingStatus\022\030\n\020_inner_ti"
  "mestamp\030\003 \001(\004\"s\n\027BOARD_STATUS_CELLBOARD1"
  "\022\016\n\006errors\030\001 \001(\r\022.\n\020balancing_status\030\002 \001"
  "(\0162\024.bms.BalancingStatus\022\030\n\020_inner_times"
  "tamp\030\003 \001(\004\"s\n\027BOARD_STATUS_CELLBOARD2\022\016\n"
  "\006errors\030\001 \001(\r\022.\n\020balancing_status\030\002 \001(\0162"
  "\024.bms.BalancingStatus\022\030\n\020_inner_timestam"
  "p\030\003 \001(\004\"s\n\027BOARD_STATUS_CELLBOARD3\022\016\n\006er"
  "rors\030\001 \001(\r\022.\n\020balancing_status\030\002 \001(\0162\024.b"
  "ms.BalancingStatus\022\030\n\020_inner_timestamp\030\003"
  " \001(\004\"s\n\027BOARD_STATUS_CELLBOARD4\022\016\n\006error"
  "s\030\001 \001(\r\022.\n\020balancing_status\030\002 \001(\0162\024.bms."
  "BalancingStatus\022\030\n\020_inner_timestamp\030\003 \001("
  "\004\"s\n\027BOARD_STATUS_CELLBOARD5\022\016\n\006errors\030\001"
  " \001(\r\022.\n\020balancing_status\030\002 \001(\0162\024.bms.Bal"
  "ancingStatus\022\030\n\020_inner_timestamp\030\003 \001(\004\"\242"
  "\001\n\027TEMPERATURES_CELLBOARD0\022\023\n\013start_inde"
  "x\030\001 \001(\r\022\r\n\005temp0\030\002 \001(\r\022\r\n\005temp1\030\003 \001(\r\022\r\n"
  "\005temp2\030\004 \001(\r\022\r\n\005temp3\030\005 \001(\r\022\r\n\005temp4\030\006 \001"
  "(\r\022\r\n\005temp5\030\007 \001(\r\022\030\n\020_inner_timestamp\030\010 "
  "\001(\004\"\242\001\n\027TEMPERATURES_CELLBOARD1\022\023\n\013start"
  "_index\030\001 \001(\r\022\r\n\005temp0\030\002 \001(\r\022\r\n\005temp1\030\003 \001"
  "(\r\022\r\n\005temp2\030\004 \001(\r\022\r\n\005temp3\030\005 \001(\r\022\r\n\005temp"
  "4\030\006 \001(\r\022\r\n\005temp5\030\007 \001(\r\022\030\n\020_inner_timesta"
  "mp\030\010 \001(\004\"\242\001\n\027TEMPERATURES_CELLBOARD2\022\023\n\013"
  "start_index\030\001 \001(\r\022\r\n\005temp0\030\002 \001(\r\022\r\n\005temp"
  "1\030\003 \001(\r\022\r\n\005temp2\030\004 \001(\r\022\r\n\005temp3\030\005 \001(\r\022\r\n"
  "\005temp4\030\006 \001(\r\022\r\n\005temp5\030\007 \001(\r\022\030\n\020_inner_ti"
  "mestamp\030\010 \001(\004\"\242\001\n\027TEMPERATURES_CELLBOARD"
  "3\022\023\n\013start_index\030\001 \001(\r\022\r\n\005temp0\030\002 \001(\r\022\r\n"
  "\005temp1\030\003 \001(\r\022\r\n\005temp2\030\004 \001(\r\022\r\n\005temp3\030\005 \001"
  "(\r\022\r\n\005temp4\030\006 \001(\r\022\r\n\005temp5\030\007 \001(\r\022\030\n\020_inn"
  "er_timestamp\030\010 \001(\004\"\242\001\n\027TEMPERATURES_CELL"
  "BOARD4\022\023\n\013start_index\030\001 \001(\r\022\r\n\005temp0\030\002 \001"
  "(\r\022\r\n\005temp1\030\003 \001(\r\022\r\n\005temp2\030\004 \001(\r\022\r\n\005temp"
  "3\030\005 \001(\r\022\r\n\005temp4\030\006 \001(\r\022\r\n\005temp5\030\007 \001(\r\022\030\n"
  "\020_inner_timestamp\030\010 \001(\004\"\242\001\n\027TEMPERATURES"
  "_CELLBOARD5\022\023\n\013start_index\030\001 \001(\r\022\r\n\005temp"
  "0\030\002 \001(\r\022\r\n\005temp1\030\003 \001(\r\022\r\n\005temp2\030\004 \001(\r\022\r\n"
  "\005temp3\030\005 \001(\r\022\r\n\005temp4\030\006 \001(\r\022\r\n\005temp5\030\007 \001"
  "(\r\022\030\n\020_inner_timestamp\030\010 \001(\004\"z\n\023VOLTAGES"
  "_CELLBOARD0\022\020\n\010voltage0\030\001 \001(\r\022\020\n\010voltage"
  "1\030\002 \001(\r\022\020\n\010voltage2\030\003 \001(\r\022\023\n\013start_index"
  "\030\004 \001(\r\022\030\n\020_inner_timestamp\030\005 \001(\004\"z\n\023VOLT"
  "AGES_CELLBOARD1\022\020\n\010voltage0\030\001 \001(\r\022\020\n\010vol"
  "tage1\030\002 \001(\r\022\020\n\010voltage2\030\003 \001(\r\022\023\n\013start_i"
  "ndex\030\004 \001(\r\022\030\n\020_inner_timestamp\030\005 \001(\004\"z\n\023"
  "VOLTAGES_CELLBOARD2\022\020\n\010voltage0\030\001 \001(\r\022\020\n"
  "\010voltage1\030\002 \001(\r\022\020\n\010voltage2\030\003 \001(\r\022\023\n\013sta"
  "rt_index\030\004 \001(\r\022\030\n\020_inner_timestamp\030\005 \001(\004"
  "\"z\n\023VOLTAGES_CELLBOARD3\022\020\n\010voltage0\030\001 \001("
  "\r\022\020\n\010voltage1\030\002 \001(\r\022\020\n\010voltage2\030\003 \001(\r\022\023\n"
  "\013start_index\030\004 \001(\r\022\030\n\020_inner_timestamp\030\005"
  " \001(\004\"z\n\023VOLTAGES_CELLBOARD4\022\020\n\010voltage0\030"
  "\001 \001(\r\022\020\n\010voltage1\030\002 \001(\r\022\020\n\010voltage2\030\003 \001("
  "\r\022\023\n\013start_index\030\004 \001(\r\022\030\n\020_inner_timesta"
  "mp\030\005 \001(\004\"z\n\023VOLTAGES_CELLBOARD5\022\020\n\010volta"
  "ge0\030\001 \001(\r\022\020\n\010voltage1\030\002 \001(\r\022\020\n\010voltage2\030"
  "\003 \001(\r\022\023\n\013start_index\030\004 \001(\r\022\030\n\020_inner_tim"
  "estamp\030\005 \001(\004\"I\n\tBALANCING\022\r\n\005cells\030\001 \001(\004"
  "\022\023\n\013board_index\030\002 \001(\r\022\030\n\020_inner_timestam"
  "p\030\003 \001(\004\":\n\tFW_UPDATE\022\023\n\013board_index\030\001 \001("
  "\r\022\030\n\020_inner_timestamp\030\002 \001(\004\"0\n\024FLASH_CEL"
  "LBOARD_0_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n"
  "\024FLASH_CELLBOARD_0_RX\022\030\n\020_inner_timestam"
  "p\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_1_TX\022\030\n\020_inne"
  "r_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_1_R"
  "X\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CEL"
  "LBOARD_2_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n"
  "\024FLASH_CELLBOARD_2_RX\022\030\n\020_inner_timestam"
  "p\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_3_TX\022\030\n\020_inne"
  "r_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_3_R"
  "X\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CEL"
  "LBOARD_4_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n"
  "\024FLASH_CELLBOARD_4_RX\022\030\n\020_inner_timestam"
  "p\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_5_TX\022\030\n\020_inne"
  "r_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_5_R"
  "X\022\030\n\020_inner_timestamp\030\001 \001(\004\"\266\016\n\004Pack\022=\n\027"
  "BOARD_STATUS_CELLBOARD0\030\001 \003(\0132\034.bms.BOAR"
  "D_STATUS_CELLBOARD0\022=\n\027BOARD_STATUS_CELL"
  "BOARD1\030\002 \003(\0132\034.bms.BOARD_STATUS_CELLBOAR"
  "D1\022=\n\027BOARD_STATUS_CELLBOARD2\030\003 \003(\0132\034.bm"
  "s.BOARD_STATUS_CELLBOARD2\022=\n\027BOARD_STATU"
  "S_CELLBOARD3\030\004 \003(\0132\034.bms.BOARD_STATUS_CE"
  "LLBOARD3\022=\n\027BOARD_STATUS_CELLBOARD4\030\005 \003("
  "\0132\034.bms.BOARD_STATUS_CELLBOARD4\022=\n\027BOARD"
  "_STATUS_CELLBOARD5\030\006 \003(\0132\034.bms.BOARD_STA"
  "TUS_CELLBOARD5\022=\n\027TEMPERATURES_CELLBOARD"
  "0\030\007 \003(\0132\034.bms.TEMPERATURES_CELLBOARD0\022=\n"
  "\027TEMPERATURES_CELLBOARD1\030\010 \003(\0132\034.bms.TEM"
  "PERATURES_CELLBOARD1\022=\n\027TEMPERATURES_CEL"
  "LBOARD2\030\t \003(\0132\034.bms.TEMPERATURES_CELLBOA"
  "RD2\022=\n\027TEMPERATURES_CELLBOARD3\030\n \003(\0132\034.b"
  "ms.TEMPERATURES_CELLBOARD3\022=\n\027TEMPERATUR"
  "ES_CELLBOARD4\030\013 \003(\0132\034.bms.TEMPERATURES_C"
  "ELLBOARD4\022=\n\027TEMPERATURES_CELLBOARD5\030\014 \003"
  "(\0132\034.bms.TEMPERATURES_CELLBOARD5\0225\n\023VOLT"
  "AGES_CELLBOARD0\030\r \003(\0132\030.bms.VOLTAGES_CEL"
  "LBOARD0\0225\n\023VOLTAGES_CELLBOARD1\030\016 \003(\0132\030.b"
  "ms.VOLTAGES_CELLBOARD1\0225\n\023VOLTAGES_CELLB"
  "OARD2\030\017 \003(\0132\030.bms.VOLTAGES_CELLBOARD2\0225\n"
  "\023VOLTAGES_CELLBOARD3\030\020 \003(\0132\030.bms.VOLTAGE"
  "S_CELLBOARD3\0225\n\023VOLTAGES_CELLBOARD4\030\021 \003("
  "\0132\030.bms.VOLTAGES_CELLBOARD4\0225\n\023VOLTAGES_"
  "CELLBOARD5\030\022 \003(\0132\030.bms.VOLTAGES_CELLBOAR"
  "D5\022!\n\tBALANCING\030\023 \003(\0132\016.bms.BALANCING\022!\n"
  "\tFW_UPDATE\030\024 \003(\0132\016.bms.FW_UPDATE\0227\n\024FLAS"
  "H_CELLBOARD_0_TX\030\025 \003(\0132\031.bms.FLASH_CELLB"
  "OARD_0_TX\0227\n\024FLASH_CELLBOARD_0_RX\030\026 \003(\0132"
  "\031.bms.FLASH_CELLBOARD_0_RX\0227\n\024FLASH_CELL"
  "BOARD_1_TX\030\027 \003(\0132\031.bms.FLASH_CELLBOARD_1"
  "_TX\0227\n\024FLASH_CELLBOARD_1_RX\030\030 \003(\0132\031.bms."
  "FLASH_CELLBOARD_1_RX\0227\n\024FLASH_CELLBOARD_"
  "2_TX\030\031 \003(\0132\031.bms.FLASH_CELLBOARD_2_TX\0227\n"
  "\024FLASH_CELLBOARD_2_RX\030\032 \003(\0132\031.bms.FLASH_"
  "CELLBOARD_2_RX\0227\n\024FLASH_CELLBOARD_3_TX\030\033"
  " \003(\0132\031.bms.FLASH_CELLBOARD_3_TX\0227\n\024FLASH"
  "_CELLBOARD_3_RX\030\034 \003(\0132\031.bms.FLASH_CELLBO"
  "ARD_3_RX\0227\n\024FLASH_CELLBOARD_4_TX\030\035 \003(\0132\031"
  ".bms.FLASH_CELLBOARD_4_TX\0227\n\024FLASH_CELLB"
  "OARD_4_RX\030\036 \003(\0132\031.bms.FLASH_CELLBOARD_4_"
  "RX\0227\n\024FLASH_CELLBOARD_5_TX\030\037 \003(\0132\031.bms.F"
  "LASH_CELLBOARD_5_TX\0227\n\024FLASH_CELLBOARD_5"
  "_RX\030  \003(\0132\031.bms.FLASH_CELLBOARD_5_RX*I\n\017"
  "BalancingStatus\022\027\n\023BalancingStatus_OFF\020\000"
  "\022\035\n\031BalancingStatus_DISCHARGE\020\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_bms_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_bms_2eproto = {
    false, false, 5119, descriptor_table_protodef_bms_2eproto,
    "bms.proto",
    &descriptor_table_bms_2eproto_once, nullptr, 0, 33,
    schemas, file_default_instances, TableStruct_bms_2eproto::offsets,
    file_level_metadata_bms_2eproto, file_level_enum_descriptors_bms_2eproto,
    file_level_service_descriptors_bms_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_bms_2eproto_getter() {
  return &descriptor_table_bms_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_bms_2eproto(&descriptor_table_bms_2eproto);
namespace bms {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BalancingStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bms_2eproto);
  return file_level_enum_descriptors_bms_2eproto[0];
}
bool BalancingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class BOARD_STATUS_CELLBOARD0::_Internal {
 public:
};

BOARD_STATUS_CELLBOARD0::BOARD_STATUS_CELLBOARD0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS_CELLBOARD0)
}
BOARD_STATUS_CELLBOARD0::BOARD_STATUS_CELLBOARD0(const BOARD_STATUS_CELLBOARD0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&errors_, &from.errors_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS_CELLBOARD0)
}

inline void BOARD_STATUS_CELLBOARD0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&errors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
}

BOARD_STATUS_CELLBOARD0::~BOARD_STATUS_CELLBOARD0() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS_CELLBOARD0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BOARD_STATUS_CELLBOARD0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BOARD_STATUS_CELLBOARD0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BOARD_STATUS_CELLBOARD0::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS_CELLBOARD0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS_CELLBOARD0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BOARD_STATUS_CELLBOARD0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS_CELLBOARD0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS_CELLBOARD0)
  return target;
}

size_t BOARD_STATUS_CELLBOARD0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS_CELLBOARD0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_errors());
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BOARD_STATUS_CELLBOARD0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BOARD_STATUS_CELLBOARD0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BOARD_STATUS_CELLBOARD0::GetClassData() const { return &_class_data_; }

void BOARD_STATUS_CELLBOARD0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BOARD_STATUS_CELLBOARD0 *>(to)->MergeFrom(
      static_cast<const BOARD_STATUS_CELLBOARD0 &>(from));
}


void BOARD_STATUS_CELLBOARD0::MergeFrom(const BOARD_STATUS_CELLBOARD0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS_CELLBOARD0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._internal_balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BOARD_STATUS_CELLBOARD0::CopyFrom(const BOARD_STATUS_CELLBOARD0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS_CELLBOARD0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS_CELLBOARD0::IsInitialized() const {
  return true;
}

void BOARD_STATUS_CELLBOARD0::InternalSwap(BOARD_STATUS_CELLBOARD0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD0, _inner_timestamp_)
      + sizeof(BOARD_STATUS_CELLBOARD0::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD0, errors_)>(
          reinterpret_cast<char*>(&errors_),
          reinterpret_cast<char*>(&other->errors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS_CELLBOARD0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[0]);
}

// ===================================================================

class BOARD_STATUS_CELLBOARD1::_Internal {
 public:
};

BOARD_STATUS_CELLBOARD1::BOARD_STATUS_CELLBOARD1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS_CELLBOARD1)
}
BOARD_STATUS_CELLBOARD1::BOARD_STATUS_CELLBOARD1(const BOARD_STATUS_CELLBOARD1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&errors_, &from.errors_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS_CELLBOARD1)
}

inline void BOARD_STATUS_CELLBOARD1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&errors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
}

BOARD_STATUS_CELLBOARD1::~BOARD_STATUS_CELLBOARD1() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS_CELLBOARD1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BOARD_STATUS_CELLBOARD1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BOARD_STATUS_CELLBOARD1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BOARD_STATUS_CELLBOARD1::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS_CELLBOARD1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS_CELLBOARD1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BOARD_STATUS_CELLBOARD1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS_CELLBOARD1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS_CELLBOARD1)
  return target;
}

size_t BOARD_STATUS_CELLBOARD1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS_CELLBOARD1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_errors());
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BOARD_STATUS_CELLBOARD1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BOARD_STATUS_CELLBOARD1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BOARD_STATUS_CELLBOARD1::GetClassData() const { return &_class_data_; }

void BOARD_STATUS_CELLBOARD1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BOARD_STATUS_CELLBOARD1 *>(to)->MergeFrom(
      static_cast<const BOARD_STATUS_CELLBOARD1 &>(from));
}


void BOARD_STATUS_CELLBOARD1::MergeFrom(const BOARD_STATUS_CELLBOARD1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS_CELLBOARD1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._internal_balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BOARD_STATUS_CELLBOARD1::CopyFrom(const BOARD_STATUS_CELLBOARD1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS_CELLBOARD1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS_CELLBOARD1::IsInitialized() const {
  return true;
}

void BOARD_STATUS_CELLBOARD1::InternalSwap(BOARD_STATUS_CELLBOARD1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD1, _inner_timestamp_)
      + sizeof(BOARD_STATUS_CELLBOARD1::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD1, errors_)>(
          reinterpret_cast<char*>(&errors_),
          reinterpret_cast<char*>(&other->errors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS_CELLBOARD1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[1]);
}

// ===================================================================

class BOARD_STATUS_CELLBOARD2::_Internal {
 public:
};

BOARD_STATUS_CELLBOARD2::BOARD_STATUS_CELLBOARD2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS_CELLBOARD2)
}
BOARD_STATUS_CELLBOARD2::BOARD_STATUS_CELLBOARD2(const BOARD_STATUS_CELLBOARD2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&errors_, &from.errors_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS_CELLBOARD2)
}

inline void BOARD_STATUS_CELLBOARD2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&errors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
}

BOARD_STATUS_CELLBOARD2::~BOARD_STATUS_CELLBOARD2() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS_CELLBOARD2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BOARD_STATUS_CELLBOARD2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BOARD_STATUS_CELLBOARD2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BOARD_STATUS_CELLBOARD2::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS_CELLBOARD2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS_CELLBOARD2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BOARD_STATUS_CELLBOARD2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS_CELLBOARD2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS_CELLBOARD2)
  return target;
}

size_t BOARD_STATUS_CELLBOARD2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS_CELLBOARD2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_errors());
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BOARD_STATUS_CELLBOARD2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BOARD_STATUS_CELLBOARD2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BOARD_STATUS_CELLBOARD2::GetClassData() const { return &_class_data_; }

void BOARD_STATUS_CELLBOARD2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BOARD_STATUS_CELLBOARD2 *>(to)->MergeFrom(
      static_cast<const BOARD_STATUS_CELLBOARD2 &>(from));
}


void BOARD_STATUS_CELLBOARD2::MergeFrom(const BOARD_STATUS_CELLBOARD2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS_CELLBOARD2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._internal_balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BOARD_STATUS_CELLBOARD2::CopyFrom(const BOARD_STATUS_CELLBOARD2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS_CELLBOARD2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS_CELLBOARD2::IsInitialized() const {
  return true;
}

void BOARD_STATUS_CELLBOARD2::InternalSwap(BOARD_STATUS_CELLBOARD2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD2, _inner_timestamp_)
      + sizeof(BOARD_STATUS_CELLBOARD2::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD2, errors_)>(
          reinterpret_cast<char*>(&errors_),
          reinterpret_cast<char*>(&other->errors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS_CELLBOARD2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[2]);
}

// ===================================================================

class BOARD_STATUS_CELLBOARD3::_Internal {
 public:
};

BOARD_STATUS_CELLBOARD3::BOARD_STATUS_CELLBOARD3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS_CELLBOARD3)
}
BOARD_STATUS_CELLBOARD3::BOARD_STATUS_CELLBOARD3(const BOARD_STATUS_CELLBOARD3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&errors_, &from.errors_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS_CELLBOARD3)
}

inline void BOARD_STATUS_CELLBOARD3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&errors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
}

BOARD_STATUS_CELLBOARD3::~BOARD_STATUS_CELLBOARD3() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS_CELLBOARD3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BOARD_STATUS_CELLBOARD3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BOARD_STATUS_CELLBOARD3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BOARD_STATUS_CELLBOARD3::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS_CELLBOARD3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS_CELLBOARD3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BOARD_STATUS_CELLBOARD3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS_CELLBOARD3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS_CELLBOARD3)
  return target;
}

size_t BOARD_STATUS_CELLBOARD3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS_CELLBOARD3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_errors());
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BOARD_STATUS_CELLBOARD3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BOARD_STATUS_CELLBOARD3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BOARD_STATUS_CELLBOARD3::GetClassData() const { return &_class_data_; }

void BOARD_STATUS_CELLBOARD3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BOARD_STATUS_CELLBOARD3 *>(to)->MergeFrom(
      static_cast<const BOARD_STATUS_CELLBOARD3 &>(from));
}


void BOARD_STATUS_CELLBOARD3::MergeFrom(const BOARD_STATUS_CELLBOARD3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS_CELLBOARD3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._internal_balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BOARD_STATUS_CELLBOARD3::CopyFrom(const BOARD_STATUS_CELLBOARD3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS_CELLBOARD3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS_CELLBOARD3::IsInitialized() const {
  return true;
}

void BOARD_STATUS_CELLBOARD3::InternalSwap(BOARD_STATUS_CELLBOARD3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD3, _inner_timestamp_)
      + sizeof(BOARD_STATUS_CELLBOARD3::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD3, errors_)>(
          reinterpret_cast<char*>(&errors_),
          reinterpret_cast<char*>(&other->errors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS_CELLBOARD3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[3]);
}

// ===================================================================

class BOARD_STATUS_CELLBOARD4::_Internal {
 public:
};

BOARD_STATUS_CELLBOARD4::BOARD_STATUS_CELLBOARD4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS_CELLBOARD4)
}
BOARD_STATUS_CELLBOARD4::BOARD_STATUS_CELLBOARD4(const BOARD_STATUS_CELLBOARD4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&errors_, &from.errors_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS_CELLBOARD4)
}

inline void BOARD_STATUS_CELLBOARD4::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&errors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
}

BOARD_STATUS_CELLBOARD4::~BOARD_STATUS_CELLBOARD4() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS_CELLBOARD4)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BOARD_STATUS_CELLBOARD4::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BOARD_STATUS_CELLBOARD4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BOARD_STATUS_CELLBOARD4::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS_CELLBOARD4)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS_CELLBOARD4::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BOARD_STATUS_CELLBOARD4::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS_CELLBOARD4)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS_CELLBOARD4)
  return target;
}

size_t BOARD_STATUS_CELLBOARD4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS_CELLBOARD4)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_errors());
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BOARD_STATUS_CELLBOARD4::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BOARD_STATUS_CELLBOARD4::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BOARD_STATUS_CELLBOARD4::GetClassData() const { return &_class_data_; }

void BOARD_STATUS_CELLBOARD4::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BOARD_STATUS_CELLBOARD4 *>(to)->MergeFrom(
      static_cast<const BOARD_STATUS_CELLBOARD4 &>(from));
}


void BOARD_STATUS_CELLBOARD4::MergeFrom(const BOARD_STATUS_CELLBOARD4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS_CELLBOARD4)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._internal_balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BOARD_STATUS_CELLBOARD4::CopyFrom(const BOARD_STATUS_CELLBOARD4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS_CELLBOARD4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS_CELLBOARD4::IsInitialized() const {
  return true;
}

void BOARD_STATUS_CELLBOARD4::InternalSwap(BOARD_STATUS_CELLBOARD4* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD4, _inner_timestamp_)
      + sizeof(BOARD_STATUS_CELLBOARD4::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD4, errors_)>(
          reinterpret_cast<char*>(&errors_),
          reinterpret_cast<char*>(&other->errors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS_CELLBOARD4::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[4]);
}

// ===================================================================

class BOARD_STATUS_CELLBOARD5::_Internal {
 public:
};

BOARD_STATUS_CELLBOARD5::BOARD_STATUS_CELLBOARD5(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS_CELLBOARD5)
}
BOARD_STATUS_CELLBOARD5::BOARD_STATUS_CELLBOARD5(const BOARD_STATUS_CELLBOARD5& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&errors_, &from.errors_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS_CELLBOARD5)
}

inline void BOARD_STATUS_CELLBOARD5::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&errors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
}

BOARD_STATUS_CELLBOARD5::~BOARD_STATUS_CELLBOARD5() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS_CELLBOARD5)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BOARD_STATUS_CELLBOARD5::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BOARD_STATUS_CELLBOARD5::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BOARD_STATUS_CELLBOARD5::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS_CELLBOARD5)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS_CELLBOARD5::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BOARD_STATUS_CELLBOARD5::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS_CELLBOARD5)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS_CELLBOARD5)
  return target;
}

size_t BOARD_STATUS_CELLBOARD5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS_CELLBOARD5)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 errors = 1;
  if (this->_internal_errors() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_errors());
  }

  // .bms.BalancingStatus balancing_status = 2;
  if (this->_internal_balancing_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BOARD_STATUS_CELLBOARD5::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BOARD_STATUS_CELLBOARD5::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BOARD_STATUS_CELLBOARD5::GetClassData() const { return &_class_data_; }

void BOARD_STATUS_CELLBOARD5::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BOARD_STATUS_CELLBOARD5 *>(to)->MergeFrom(
      static_cast<const BOARD_STATUS_CELLBOARD5 &>(from));
}


void BOARD_STATUS_CELLBOARD5::MergeFrom(const BOARD_STATUS_CELLBOARD5& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS_CELLBOARD5)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._internal_balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BOARD_STATUS_CELLBOARD5::CopyFrom(const BOARD_STATUS_CELLBOARD5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS_CELLBOARD5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS_CELLBOARD5::IsInitialized() const {
  return true;
}

void BOARD_STATUS_CELLBOARD5::InternalSwap(BOARD_STATUS_CELLBOARD5* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD5, _inner_timestamp_)
      + sizeof(BOARD_STATUS_CELLBOARD5::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS_CELLBOARD5, errors_)>(
          reinterpret_cast<char*>(&errors_),
          reinterpret_cast<char*>(&other->errors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS_CELLBOARD5::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[5]);
}

// ===================================================================

class TEMPERATURES_CELLBOARD0::_Internal {
 public:
};

TEMPERATURES_CELLBOARD0::TEMPERATURES_CELLBOARD0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES_CELLBOARD0)
}
TEMPERATURES_CELLBOARD0::TEMPERATURES_CELLBOARD0(const TEMPERATURES_CELLBOARD0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES_CELLBOARD0)
}

inline void TEMPERATURES_CELLBOARD0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
}

TEMPERATURES_CELLBOARD0::~TEMPERATURES_CELLBOARD0() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES_CELLBOARD0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TEMPERATURES_CELLBOARD0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TEMPERATURES_CELLBOARD0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TEMPERATURES_CELLBOARD0::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES_CELLBOARD0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES_CELLBOARD0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          temp4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          temp5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TEMPERATURES_CELLBOARD0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES_CELLBOARD0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_index(), target);
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_temp0(), target);
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_temp1(), target);
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_temp2(), target);
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_temp3(), target);
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_temp4(), target);
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_temp5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES_CELLBOARD0)
  return target;
}

size_t TEMPERATURES_CELLBOARD0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES_CELLBOARD0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp0());
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp1());
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp2());
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp3());
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp4());
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp5());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TEMPERATURES_CELLBOARD0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TEMPERATURES_CELLBOARD0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TEMPERATURES_CELLBOARD0::GetClassData() const { return &_class_data_; }

void TEMPERATURES_CELLBOARD0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TEMPERATURES_CELLBOARD0 *>(to)->MergeFrom(
      static_cast<const TEMPERATURES_CELLBOARD0 &>(from));
}


void TEMPERATURES_CELLBOARD0::MergeFrom(const TEMPERATURES_CELLBOARD0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES_CELLBOARD0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_temp0() != 0) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (from._internal_temp1() != 0) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (from._internal_temp2() != 0) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (from._internal_temp3() != 0) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._internal_temp4() != 0) {
    _internal_set_temp4(from._internal_temp4());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_temp5() != 0) {
    _internal_set_temp5(from._internal_temp5());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TEMPERATURES_CELLBOARD0::CopyFrom(const TEMPERATURES_CELLBOARD0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES_CELLBOARD0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES_CELLBOARD0::IsInitialized() const {
  return true;
}

void TEMPERATURES_CELLBOARD0::InternalSwap(TEMPERATURES_CELLBOARD0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD0, temp5_)
      + sizeof(TEMPERATURES_CELLBOARD0::temp5_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD0, start_index_)>(
          reinterpret_cast<char*>(&start_index_),
          reinterpret_cast<char*>(&other->start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES_CELLBOARD0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[6]);
}

// ===================================================================

class TEMPERATURES_CELLBOARD1::_Internal {
 public:
};

TEMPERATURES_CELLBOARD1::TEMPERATURES_CELLBOARD1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES_CELLBOARD1)
}
TEMPERATURES_CELLBOARD1::TEMPERATURES_CELLBOARD1(const TEMPERATURES_CELLBOARD1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES_CELLBOARD1)
}

inline void TEMPERATURES_CELLBOARD1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
}

TEMPERATURES_CELLBOARD1::~TEMPERATURES_CELLBOARD1() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES_CELLBOARD1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TEMPERATURES_CELLBOARD1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TEMPERATURES_CELLBOARD1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TEMPERATURES_CELLBOARD1::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES_CELLBOARD1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES_CELLBOARD1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          temp4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          temp5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TEMPERATURES_CELLBOARD1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES_CELLBOARD1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_index(), target);
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_temp0(), target);
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_temp1(), target);
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_temp2(), target);
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_temp3(), target);
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_temp4(), target);
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_temp5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES_CELLBOARD1)
  return target;
}

size_t TEMPERATURES_CELLBOARD1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES_CELLBOARD1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp0());
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp1());
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp2());
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp3());
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp4());
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp5());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TEMPERATURES_CELLBOARD1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TEMPERATURES_CELLBOARD1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TEMPERATURES_CELLBOARD1::GetClassData() const { return &_class_data_; }

void TEMPERATURES_CELLBOARD1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TEMPERATURES_CELLBOARD1 *>(to)->MergeFrom(
      static_cast<const TEMPERATURES_CELLBOARD1 &>(from));
}


void TEMPERATURES_CELLBOARD1::MergeFrom(const TEMPERATURES_CELLBOARD1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES_CELLBOARD1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_temp0() != 0) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (from._internal_temp1() != 0) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (from._internal_temp2() != 0) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (from._internal_temp3() != 0) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._internal_temp4() != 0) {
    _internal_set_temp4(from._internal_temp4());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_temp5() != 0) {
    _internal_set_temp5(from._internal_temp5());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TEMPERATURES_CELLBOARD1::CopyFrom(const TEMPERATURES_CELLBOARD1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES_CELLBOARD1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES_CELLBOARD1::IsInitialized() const {
  return true;
}

void TEMPERATURES_CELLBOARD1::InternalSwap(TEMPERATURES_CELLBOARD1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD1, temp5_)
      + sizeof(TEMPERATURES_CELLBOARD1::temp5_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD1, start_index_)>(
          reinterpret_cast<char*>(&start_index_),
          reinterpret_cast<char*>(&other->start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES_CELLBOARD1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[7]);
}

// ===================================================================

class TEMPERATURES_CELLBOARD2::_Internal {
 public:
};

TEMPERATURES_CELLBOARD2::TEMPERATURES_CELLBOARD2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES_CELLBOARD2)
}
TEMPERATURES_CELLBOARD2::TEMPERATURES_CELLBOARD2(const TEMPERATURES_CELLBOARD2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES_CELLBOARD2)
}

inline void TEMPERATURES_CELLBOARD2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
}

TEMPERATURES_CELLBOARD2::~TEMPERATURES_CELLBOARD2() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES_CELLBOARD2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TEMPERATURES_CELLBOARD2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TEMPERATURES_CELLBOARD2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TEMPERATURES_CELLBOARD2::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES_CELLBOARD2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES_CELLBOARD2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          temp4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          temp5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TEMPERATURES_CELLBOARD2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES_CELLBOARD2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_index(), target);
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_temp0(), target);
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_temp1(), target);
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_temp2(), target);
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_temp3(), target);
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_temp4(), target);
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_temp5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES_CELLBOARD2)
  return target;
}

size_t TEMPERATURES_CELLBOARD2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES_CELLBOARD2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp0());
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp1());
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp2());
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp3());
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp4());
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp5());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TEMPERATURES_CELLBOARD2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TEMPERATURES_CELLBOARD2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TEMPERATURES_CELLBOARD2::GetClassData() const { return &_class_data_; }

void TEMPERATURES_CELLBOARD2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TEMPERATURES_CELLBOARD2 *>(to)->MergeFrom(
      static_cast<const TEMPERATURES_CELLBOARD2 &>(from));
}


void TEMPERATURES_CELLBOARD2::MergeFrom(const TEMPERATURES_CELLBOARD2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES_CELLBOARD2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_temp0() != 0) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (from._internal_temp1() != 0) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (from._internal_temp2() != 0) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (from._internal_temp3() != 0) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._internal_temp4() != 0) {
    _internal_set_temp4(from._internal_temp4());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_temp5() != 0) {
    _internal_set_temp5(from._internal_temp5());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TEMPERATURES_CELLBOARD2::CopyFrom(const TEMPERATURES_CELLBOARD2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES_CELLBOARD2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES_CELLBOARD2::IsInitialized() const {
  return true;
}

void TEMPERATURES_CELLBOARD2::InternalSwap(TEMPERATURES_CELLBOARD2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD2, temp5_)
      + sizeof(TEMPERATURES_CELLBOARD2::temp5_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD2, start_index_)>(
          reinterpret_cast<char*>(&start_index_),
          reinterpret_cast<char*>(&other->start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES_CELLBOARD2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[8]);
}

// ===================================================================

class TEMPERATURES_CELLBOARD3::_Internal {
 public:
};

TEMPERATURES_CELLBOARD3::TEMPERATURES_CELLBOARD3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES_CELLBOARD3)
}
TEMPERATURES_CELLBOARD3::TEMPERATURES_CELLBOARD3(const TEMPERATURES_CELLBOARD3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES_CELLBOARD3)
}

inline void TEMPERATURES_CELLBOARD3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
}

TEMPERATURES_CELLBOARD3::~TEMPERATURES_CELLBOARD3() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES_CELLBOARD3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TEMPERATURES_CELLBOARD3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TEMPERATURES_CELLBOARD3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TEMPERATURES_CELLBOARD3::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES_CELLBOARD3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES_CELLBOARD3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          temp4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          temp5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TEMPERATURES_CELLBOARD3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES_CELLBOARD3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_index(), target);
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_temp0(), target);
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_temp1(), target);
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_temp2(), target);
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_temp3(), target);
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_temp4(), target);
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_temp5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES_CELLBOARD3)
  return target;
}

size_t TEMPERATURES_CELLBOARD3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES_CELLBOARD3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp0());
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp1());
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp2());
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp3());
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp4());
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp5());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TEMPERATURES_CELLBOARD3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TEMPERATURES_CELLBOARD3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TEMPERATURES_CELLBOARD3::GetClassData() const { return &_class_data_; }

void TEMPERATURES_CELLBOARD3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TEMPERATURES_CELLBOARD3 *>(to)->MergeFrom(
      static_cast<const TEMPERATURES_CELLBOARD3 &>(from));
}


void TEMPERATURES_CELLBOARD3::MergeFrom(const TEMPERATURES_CELLBOARD3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES_CELLBOARD3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_temp0() != 0) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (from._internal_temp1() != 0) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (from._internal_temp2() != 0) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (from._internal_temp3() != 0) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._internal_temp4() != 0) {
    _internal_set_temp4(from._internal_temp4());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_temp5() != 0) {
    _internal_set_temp5(from._internal_temp5());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TEMPERATURES_CELLBOARD3::CopyFrom(const TEMPERATURES_CELLBOARD3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES_CELLBOARD3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES_CELLBOARD3::IsInitialized() const {
  return true;
}

void TEMPERATURES_CELLBOARD3::InternalSwap(TEMPERATURES_CELLBOARD3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD3, temp5_)
      + sizeof(TEMPERATURES_CELLBOARD3::temp5_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD3, start_index_)>(
          reinterpret_cast<char*>(&start_index_),
          reinterpret_cast<char*>(&other->start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES_CELLBOARD3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[9]);
}

// ===================================================================

class TEMPERATURES_CELLBOARD4::_Internal {
 public:
};

TEMPERATURES_CELLBOARD4::TEMPERATURES_CELLBOARD4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES_CELLBOARD4)
}
TEMPERATURES_CELLBOARD4::TEMPERATURES_CELLBOARD4(const TEMPERATURES_CELLBOARD4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES_CELLBOARD4)
}

inline void TEMPERATURES_CELLBOARD4::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
}

TEMPERATURES_CELLBOARD4::~TEMPERATURES_CELLBOARD4() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES_CELLBOARD4)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TEMPERATURES_CELLBOARD4::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TEMPERATURES_CELLBOARD4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TEMPERATURES_CELLBOARD4::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES_CELLBOARD4)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES_CELLBOARD4::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          temp4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          temp5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TEMPERATURES_CELLBOARD4::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES_CELLBOARD4)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_index(), target);
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_temp0(), target);
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_temp1(), target);
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_temp2(), target);
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_temp3(), target);
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_temp4(), target);
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_temp5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES_CELLBOARD4)
  return target;
}

size_t TEMPERATURES_CELLBOARD4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES_CELLBOARD4)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp0());
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp1());
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp2());
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp3());
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp4());
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp5());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TEMPERATURES_CELLBOARD4::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TEMPERATURES_CELLBOARD4::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TEMPERATURES_CELLBOARD4::GetClassData() const { return &_class_data_; }

void TEMPERATURES_CELLBOARD4::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TEMPERATURES_CELLBOARD4 *>(to)->MergeFrom(
      static_cast<const TEMPERATURES_CELLBOARD4 &>(from));
}


void TEMPERATURES_CELLBOARD4::MergeFrom(const TEMPERATURES_CELLBOARD4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES_CELLBOARD4)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_temp0() != 0) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (from._internal_temp1() != 0) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (from._internal_temp2() != 0) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (from._internal_temp3() != 0) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._internal_temp4() != 0) {
    _internal_set_temp4(from._internal_temp4());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_temp5() != 0) {
    _internal_set_temp5(from._internal_temp5());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TEMPERATURES_CELLBOARD4::CopyFrom(const TEMPERATURES_CELLBOARD4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES_CELLBOARD4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES_CELLBOARD4::IsInitialized() const {
  return true;
}

void TEMPERATURES_CELLBOARD4::InternalSwap(TEMPERATURES_CELLBOARD4* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD4, temp5_)
      + sizeof(TEMPERATURES_CELLBOARD4::temp5_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD4, start_index_)>(
          reinterpret_cast<char*>(&start_index_),
          reinterpret_cast<char*>(&other->start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES_CELLBOARD4::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[10]);
}

// ===================================================================

class TEMPERATURES_CELLBOARD5::_Internal {
 public:
};

TEMPERATURES_CELLBOARD5::TEMPERATURES_CELLBOARD5(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES_CELLBOARD5)
}
TEMPERATURES_CELLBOARD5::TEMPERATURES_CELLBOARD5(const TEMPERATURES_CELLBOARD5& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES_CELLBOARD5)
}

inline void TEMPERATURES_CELLBOARD5::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&temp5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
}

TEMPERATURES_CELLBOARD5::~TEMPERATURES_CELLBOARD5() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES_CELLBOARD5)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TEMPERATURES_CELLBOARD5::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TEMPERATURES_CELLBOARD5::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TEMPERATURES_CELLBOARD5::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES_CELLBOARD5)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES_CELLBOARD5::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 start_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          temp4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 temp5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          temp5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TEMPERATURES_CELLBOARD5::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES_CELLBOARD5)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_index(), target);
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_temp0(), target);
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_temp1(), target);
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_temp2(), target);
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_temp3(), target);
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_temp4(), target);
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_temp5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES_CELLBOARD5)
  return target;
}

size_t TEMPERATURES_CELLBOARD5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES_CELLBOARD5)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint32 temp0 = 2;
  if (this->_internal_temp0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp0());
  }

  // uint32 temp1 = 3;
  if (this->_internal_temp1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp1());
  }

  // uint32 temp2 = 4;
  if (this->_internal_temp2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp2());
  }

  // uint32 temp3 = 5;
  if (this->_internal_temp3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp3());
  }

  // uint32 temp4 = 6;
  if (this->_internal_temp4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp4());
  }

  // uint64 _inner_timestamp = 8;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 temp5 = 7;
  if (this->_internal_temp5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_temp5());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TEMPERATURES_CELLBOARD5::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TEMPERATURES_CELLBOARD5::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TEMPERATURES_CELLBOARD5::GetClassData() const { return &_class_data_; }

void TEMPERATURES_CELLBOARD5::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TEMPERATURES_CELLBOARD5 *>(to)->MergeFrom(
      static_cast<const TEMPERATURES_CELLBOARD5 &>(from));
}


void TEMPERATURES_CELLBOARD5::MergeFrom(const TEMPERATURES_CELLBOARD5& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES_CELLBOARD5)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_temp0() != 0) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (from._internal_temp1() != 0) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (from._internal_temp2() != 0) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (from._internal_temp3() != 0) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._internal_temp4() != 0) {
    _internal_set_temp4(from._internal_temp4());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_temp5() != 0) {
    _internal_set_temp5(from._internal_temp5());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TEMPERATURES_CELLBOARD5::CopyFrom(const TEMPERATURES_CELLBOARD5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES_CELLBOARD5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES_CELLBOARD5::IsInitialized() const {
  return true;
}

void TEMPERATURES_CELLBOARD5::InternalSwap(TEMPERATURES_CELLBOARD5* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD5, temp5_)
      + sizeof(TEMPERATURES_CELLBOARD5::temp5_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES_CELLBOARD5, start_index_)>(
          reinterpret_cast<char*>(&start_index_),
          reinterpret_cast<char*>(&other->start_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES_CELLBOARD5::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[11]);
}

// ===================================================================

class VOLTAGES_CELLBOARD0::_Internal {
 public:
};

VOLTAGES_CELLBOARD0::VOLTAGES_CELLBOARD0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES_CELLBOARD0)
}
VOLTAGES_CELLBOARD0::VOLTAGES_CELLBOARD0(const VOLTAGES_CELLBOARD0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&voltage0_, &from.voltage0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES_CELLBOARD0)
}

inline void VOLTAGES_CELLBOARD0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&voltage0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
}

VOLTAGES_CELLBOARD0::~VOLTAGES_CELLBOARD0() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES_CELLBOARD0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VOLTAGES_CELLBOARD0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VOLTAGES_CELLBOARD0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VOLTAGES_CELLBOARD0::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES_CELLBOARD0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES_CELLBOARD0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 voltage0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VOLTAGES_CELLBOARD0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES_CELLBOARD0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_voltage0(), target);
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_voltage1(), target);
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_voltage2(), target);
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_index(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES_CELLBOARD0)
  return target;
}

size_t VOLTAGES_CELLBOARD0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES_CELLBOARD0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage0());
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage1());
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage2());
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VOLTAGES_CELLBOARD0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VOLTAGES_CELLBOARD0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VOLTAGES_CELLBOARD0::GetClassData() const { return &_class_data_; }

void VOLTAGES_CELLBOARD0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VOLTAGES_CELLBOARD0 *>(to)->MergeFrom(
      static_cast<const VOLTAGES_CELLBOARD0 &>(from));
}


void VOLTAGES_CELLBOARD0::MergeFrom(const VOLTAGES_CELLBOARD0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES_CELLBOARD0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_voltage0() != 0) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (from._internal_voltage1() != 0) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._internal_voltage2() != 0) {
    _internal_set_voltage2(from._internal_voltage2());
  }
  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VOLTAGES_CELLBOARD0::CopyFrom(const VOLTAGES_CELLBOARD0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES_CELLBOARD0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES_CELLBOARD0::IsInitialized() const {
  return true;
}

void VOLTAGES_CELLBOARD0::InternalSwap(VOLTAGES_CELLBOARD0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD0, _inner_timestamp_)
      + sizeof(VOLTAGES_CELLBOARD0::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD0, voltage0_)>(
          reinterpret_cast<char*>(&voltage0_),
          reinterpret_cast<char*>(&other->voltage0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES_CELLBOARD0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[12]);
}

// ===================================================================

class VOLTAGES_CELLBOARD1::_Internal {
 public:
};

VOLTAGES_CELLBOARD1::VOLTAGES_CELLBOARD1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES_CELLBOARD1)
}
VOLTAGES_CELLBOARD1::VOLTAGES_CELLBOARD1(const VOLTAGES_CELLBOARD1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&voltage0_, &from.voltage0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES_CELLBOARD1)
}

inline void VOLTAGES_CELLBOARD1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&voltage0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
}

VOLTAGES_CELLBOARD1::~VOLTAGES_CELLBOARD1() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES_CELLBOARD1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VOLTAGES_CELLBOARD1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VOLTAGES_CELLBOARD1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VOLTAGES_CELLBOARD1::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES_CELLBOARD1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES_CELLBOARD1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 voltage0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VOLTAGES_CELLBOARD1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES_CELLBOARD1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_voltage0(), target);
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_voltage1(), target);
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_voltage2(), target);
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_index(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES_CELLBOARD1)
  return target;
}

size_t VOLTAGES_CELLBOARD1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES_CELLBOARD1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage0());
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage1());
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage2());
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VOLTAGES_CELLBOARD1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VOLTAGES_CELLBOARD1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VOLTAGES_CELLBOARD1::GetClassData() const { return &_class_data_; }

void VOLTAGES_CELLBOARD1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VOLTAGES_CELLBOARD1 *>(to)->MergeFrom(
      static_cast<const VOLTAGES_CELLBOARD1 &>(from));
}


void VOLTAGES_CELLBOARD1::MergeFrom(const VOLTAGES_CELLBOARD1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES_CELLBOARD1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_voltage0() != 0) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (from._internal_voltage1() != 0) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._internal_voltage2() != 0) {
    _internal_set_voltage2(from._internal_voltage2());
  }
  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VOLTAGES_CELLBOARD1::CopyFrom(const VOLTAGES_CELLBOARD1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES_CELLBOARD1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES_CELLBOARD1::IsInitialized() const {
  return true;
}

void VOLTAGES_CELLBOARD1::InternalSwap(VOLTAGES_CELLBOARD1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD1, _inner_timestamp_)
      + sizeof(VOLTAGES_CELLBOARD1::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD1, voltage0_)>(
          reinterpret_cast<char*>(&voltage0_),
          reinterpret_cast<char*>(&other->voltage0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES_CELLBOARD1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[13]);
}

// ===================================================================

class VOLTAGES_CELLBOARD2::_Internal {
 public:
};

VOLTAGES_CELLBOARD2::VOLTAGES_CELLBOARD2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES_CELLBOARD2)
}
VOLTAGES_CELLBOARD2::VOLTAGES_CELLBOARD2(const VOLTAGES_CELLBOARD2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&voltage0_, &from.voltage0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES_CELLBOARD2)
}

inline void VOLTAGES_CELLBOARD2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&voltage0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
}

VOLTAGES_CELLBOARD2::~VOLTAGES_CELLBOARD2() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES_CELLBOARD2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VOLTAGES_CELLBOARD2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VOLTAGES_CELLBOARD2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VOLTAGES_CELLBOARD2::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES_CELLBOARD2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES_CELLBOARD2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 voltage0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VOLTAGES_CELLBOARD2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES_CELLBOARD2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_voltage0(), target);
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_voltage1(), target);
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_voltage2(), target);
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_index(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES_CELLBOARD2)
  return target;
}

size_t VOLTAGES_CELLBOARD2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES_CELLBOARD2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage0());
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage1());
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage2());
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VOLTAGES_CELLBOARD2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VOLTAGES_CELLBOARD2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VOLTAGES_CELLBOARD2::GetClassData() const { return &_class_data_; }

void VOLTAGES_CELLBOARD2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VOLTAGES_CELLBOARD2 *>(to)->MergeFrom(
      static_cast<const VOLTAGES_CELLBOARD2 &>(from));
}


void VOLTAGES_CELLBOARD2::MergeFrom(const VOLTAGES_CELLBOARD2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES_CELLBOARD2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_voltage0() != 0) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (from._internal_voltage1() != 0) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._internal_voltage2() != 0) {
    _internal_set_voltage2(from._internal_voltage2());
  }
  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VOLTAGES_CELLBOARD2::CopyFrom(const VOLTAGES_CELLBOARD2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES_CELLBOARD2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES_CELLBOARD2::IsInitialized() const {
  return true;
}

void VOLTAGES_CELLBOARD2::InternalSwap(VOLTAGES_CELLBOARD2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD2, _inner_timestamp_)
      + sizeof(VOLTAGES_CELLBOARD2::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD2, voltage0_)>(
          reinterpret_cast<char*>(&voltage0_),
          reinterpret_cast<char*>(&other->voltage0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES_CELLBOARD2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[14]);
}

// ===================================================================

class VOLTAGES_CELLBOARD3::_Internal {
 public:
};

VOLTAGES_CELLBOARD3::VOLTAGES_CELLBOARD3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES_CELLBOARD3)
}
VOLTAGES_CELLBOARD3::VOLTAGES_CELLBOARD3(const VOLTAGES_CELLBOARD3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&voltage0_, &from.voltage0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES_CELLBOARD3)
}

inline void VOLTAGES_CELLBOARD3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&voltage0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
}

VOLTAGES_CELLBOARD3::~VOLTAGES_CELLBOARD3() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES_CELLBOARD3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VOLTAGES_CELLBOARD3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VOLTAGES_CELLBOARD3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VOLTAGES_CELLBOARD3::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES_CELLBOARD3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES_CELLBOARD3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 voltage0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VOLTAGES_CELLBOARD3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES_CELLBOARD3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_voltage0(), target);
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_voltage1(), target);
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_voltage2(), target);
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_index(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES_CELLBOARD3)
  return target;
}

size_t VOLTAGES_CELLBOARD3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES_CELLBOARD3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage0());
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage1());
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage2());
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VOLTAGES_CELLBOARD3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VOLTAGES_CELLBOARD3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VOLTAGES_CELLBOARD3::GetClassData() const { return &_class_data_; }

void VOLTAGES_CELLBOARD3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VOLTAGES_CELLBOARD3 *>(to)->MergeFrom(
      static_cast<const VOLTAGES_CELLBOARD3 &>(from));
}


void VOLTAGES_CELLBOARD3::MergeFrom(const VOLTAGES_CELLBOARD3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES_CELLBOARD3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_voltage0() != 0) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (from._internal_voltage1() != 0) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._internal_voltage2() != 0) {
    _internal_set_voltage2(from._internal_voltage2());
  }
  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VOLTAGES_CELLBOARD3::CopyFrom(const VOLTAGES_CELLBOARD3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES_CELLBOARD3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES_CELLBOARD3::IsInitialized() const {
  return true;
}

void VOLTAGES_CELLBOARD3::InternalSwap(VOLTAGES_CELLBOARD3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD3, _inner_timestamp_)
      + sizeof(VOLTAGES_CELLBOARD3::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD3, voltage0_)>(
          reinterpret_cast<char*>(&voltage0_),
          reinterpret_cast<char*>(&other->voltage0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES_CELLBOARD3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[15]);
}

// ===================================================================

class VOLTAGES_CELLBOARD4::_Internal {
 public:
};

VOLTAGES_CELLBOARD4::VOLTAGES_CELLBOARD4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES_CELLBOARD4)
}
VOLTAGES_CELLBOARD4::VOLTAGES_CELLBOARD4(const VOLTAGES_CELLBOARD4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&voltage0_, &from.voltage0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES_CELLBOARD4)
}

inline void VOLTAGES_CELLBOARD4::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&voltage0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
}

VOLTAGES_CELLBOARD4::~VOLTAGES_CELLBOARD4() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES_CELLBOARD4)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VOLTAGES_CELLBOARD4::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VOLTAGES_CELLBOARD4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VOLTAGES_CELLBOARD4::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES_CELLBOARD4)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES_CELLBOARD4::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 voltage0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VOLTAGES_CELLBOARD4::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES_CELLBOARD4)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_voltage0(), target);
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_voltage1(), target);
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_voltage2(), target);
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_index(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES_CELLBOARD4)
  return target;
}

size_t VOLTAGES_CELLBOARD4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES_CELLBOARD4)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage0());
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage1());
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage2());
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VOLTAGES_CELLBOARD4::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VOLTAGES_CELLBOARD4::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VOLTAGES_CELLBOARD4::GetClassData() const { return &_class_data_; }

void VOLTAGES_CELLBOARD4::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VOLTAGES_CELLBOARD4 *>(to)->MergeFrom(
      static_cast<const VOLTAGES_CELLBOARD4 &>(from));
}


void VOLTAGES_CELLBOARD4::MergeFrom(const VOLTAGES_CELLBOARD4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES_CELLBOARD4)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_voltage0() != 0) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (from._internal_voltage1() != 0) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._internal_voltage2() != 0) {
    _internal_set_voltage2(from._internal_voltage2());
  }
  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VOLTAGES_CELLBOARD4::CopyFrom(const VOLTAGES_CELLBOARD4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES_CELLBOARD4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES_CELLBOARD4::IsInitialized() const {
  return true;
}

void VOLTAGES_CELLBOARD4::InternalSwap(VOLTAGES_CELLBOARD4* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD4, _inner_timestamp_)
      + sizeof(VOLTAGES_CELLBOARD4::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD4, voltage0_)>(
          reinterpret_cast<char*>(&voltage0_),
          reinterpret_cast<char*>(&other->voltage0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES_CELLBOARD4::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[16]);
}

// ===================================================================

class VOLTAGES_CELLBOARD5::_Internal {
 public:
};

VOLTAGES_CELLBOARD5::VOLTAGES_CELLBOARD5(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES_CELLBOARD5)
}
VOLTAGES_CELLBOARD5::VOLTAGES_CELLBOARD5(const VOLTAGES_CELLBOARD5& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&voltage0_, &from.voltage0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES_CELLBOARD5)
}

inline void VOLTAGES_CELLBOARD5::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&voltage0_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
}

VOLTAGES_CELLBOARD5::~VOLTAGES_CELLBOARD5() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES_CELLBOARD5)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VOLTAGES_CELLBOARD5::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VOLTAGES_CELLBOARD5::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VOLTAGES_CELLBOARD5::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES_CELLBOARD5)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES_CELLBOARD5::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 voltage0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 voltage2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VOLTAGES_CELLBOARD5::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES_CELLBOARD5)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_voltage0(), target);
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_voltage1(), target);
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_voltage2(), target);
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_index(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES_CELLBOARD5)
  return target;
}

size_t VOLTAGES_CELLBOARD5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES_CELLBOARD5)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 voltage0 = 1;
  if (this->_internal_voltage0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage0());
  }

  // uint32 voltage1 = 2;
  if (this->_internal_voltage1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage1());
  }

  // uint32 voltage2 = 3;
  if (this->_internal_voltage2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_voltage2());
  }

  // uint32 start_index = 4;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_index());
  }

  // uint64 _inner_timestamp = 5;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VOLTAGES_CELLBOARD5::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VOLTAGES_CELLBOARD5::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VOLTAGES_CELLBOARD5::GetClassData() const { return &_class_data_; }

void VOLTAGES_CELLBOARD5::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VOLTAGES_CELLBOARD5 *>(to)->MergeFrom(
      static_cast<const VOLTAGES_CELLBOARD5 &>(from));
}


void VOLTAGES_CELLBOARD5::MergeFrom(const VOLTAGES_CELLBOARD5& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES_CELLBOARD5)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_voltage0() != 0) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (from._internal_voltage1() != 0) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._internal_voltage2() != 0) {
    _internal_set_voltage2(from._internal_voltage2());
  }
  if (from._internal_start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VOLTAGES_CELLBOARD5::CopyFrom(const VOLTAGES_CELLBOARD5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES_CELLBOARD5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES_CELLBOARD5::IsInitialized() const {
  return true;
}

void VOLTAGES_CELLBOARD5::InternalSwap(VOLTAGES_CELLBOARD5* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD5, _inner_timestamp_)
      + sizeof(VOLTAGES_CELLBOARD5::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES_CELLBOARD5, voltage0_)>(
          reinterpret_cast<char*>(&voltage0_),
          reinterpret_cast<char*>(&other->voltage0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES_CELLBOARD5::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[17]);
}

// ===================================================================

class BALANCING::_Internal {
 public:
};

BALANCING::BALANCING(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.BALANCING)
}
BALANCING::BALANCING(const BALANCING& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cells_, &from.cells_,
    static_cast<size_t>(reinterpret_cast<char*>(&board_index_) -
    reinterpret_cast<char*>(&cells_)) + sizeof(board_index_));
  // @@protoc_insertion_point(copy_constructor:bms.BALANCING)
}

inline void BALANCING::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cells_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&board_index_) -
    reinterpret_cast<char*>(&cells_)) + sizeof(board_index_));
}

BALANCING::~BALANCING() {
  // @@protoc_insertion_point(destructor:bms.BALANCING)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BALANCING::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BALANCING::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BALANCING::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BALANCING)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cells_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&board_index_) -
      reinterpret_cast<char*>(&cells_)) + sizeof(board_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BALANCING::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 cells = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          cells_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 board_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          board_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BALANCING::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BALANCING)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cells = 1;
  if (this->_internal_cells() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_cells(), target);
  }

  // uint32 board_index = 2;
  if (this->_internal_board_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_board_index(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BALANCING)
  return target;
}

size_t BALANCING::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BALANCING)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 cells = 1;
  if (this->_internal_cells() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_cells());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 board_index = 2;
  if (this->_internal_board_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_board_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BALANCING::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BALANCING::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BALANCING::GetClassData() const { return &_class_data_; }

void BALANCING::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BALANCING *>(to)->MergeFrom(
      static_cast<const BALANCING &>(from));
}


void BALANCING::MergeFrom(const BALANCING& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BALANCING)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cells() != 0) {
    _internal_set_cells(from._internal_cells());
  }
  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_board_index() != 0) {
    _internal_set_board_index(from._internal_board_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BALANCING::CopyFrom(const BALANCING& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BALANCING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BALANCING::IsInitialized() const {
  return true;
}

void BALANCING::InternalSwap(BALANCING* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BALANCING, board_index_)
      + sizeof(BALANCING::board_index_)
      - PROTOBUF_FIELD_OFFSET(BALANCING, cells_)>(
          reinterpret_cast<char*>(&cells_),
          reinterpret_cast<char*>(&other->cells_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BALANCING::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[18]);
}

// ===================================================================

class FW_UPDATE::_Internal {
 public:
};

FW_UPDATE::FW_UPDATE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FW_UPDATE)
}
FW_UPDATE::FW_UPDATE(const FW_UPDATE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&board_index_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(board_index_));
  // @@protoc_insertion_point(copy_constructor:bms.FW_UPDATE)
}

inline void FW_UPDATE::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&_inner_timestamp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&board_index_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(board_index_));
}

FW_UPDATE::~FW_UPDATE() {
  // @@protoc_insertion_point(destructor:bms.FW_UPDATE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FW_UPDATE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FW_UPDATE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FW_UPDATE::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FW_UPDATE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&board_index_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(board_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FW_UPDATE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 board_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          board_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FW_UPDATE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FW_UPDATE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 board_index = 1;
  if (this->_internal_board_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_board_index(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FW_UPDATE)
  return target;
}

size_t FW_UPDATE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FW_UPDATE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 2;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  // uint32 board_index = 1;
  if (this->_internal_board_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_board_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FW_UPDATE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FW_UPDATE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FW_UPDATE::GetClassData() const { return &_class_data_; }

void FW_UPDATE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FW_UPDATE *>(to)->MergeFrom(
      static_cast<const FW_UPDATE &>(from));
}


void FW_UPDATE::MergeFrom(const FW_UPDATE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FW_UPDATE)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from._internal_board_index() != 0) {
    _internal_set_board_index(from._internal_board_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FW_UPDATE::CopyFrom(const FW_UPDATE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FW_UPDATE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FW_UPDATE::IsInitialized() const {
  return true;
}

void FW_UPDATE::InternalSwap(FW_UPDATE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FW_UPDATE, board_index_)
      + sizeof(FW_UPDATE::board_index_)
      - PROTOBUF_FIELD_OFFSET(FW_UPDATE, _inner_timestamp_)>(
          reinterpret_cast<char*>(&_inner_timestamp_),
          reinterpret_cast<char*>(&other->_inner_timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FW_UPDATE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[19]);
}

// ===================================================================

class FLASH_CELLBOARD_0_TX::_Internal {
 public:
};

FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_0_TX)
}
FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX(const FLASH_CELLBOARD_0_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_0_TX)
}

inline void FLASH_CELLBOARD_0_TX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_0_TX::~FLASH_CELLBOARD_0_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_0_TX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_0_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_0_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_0_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_0_TX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_0_TX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_0_TX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_0_TX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_0_TX)
  return target;
}

size_t FLASH_CELLBOARD_0_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_0_TX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_0_TX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_0_TX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_0_TX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_0_TX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_0_TX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_0_TX &>(from));
}


void FLASH_CELLBOARD_0_TX::MergeFrom(const FLASH_CELLBOARD_0_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_0_TX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_0_TX::CopyFrom(const FLASH_CELLBOARD_0_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_0_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_0_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_0_TX::InternalSwap(FLASH_CELLBOARD_0_TX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_0_TX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[20]);
}

// ===================================================================

class FLASH_CELLBOARD_0_RX::_Internal {
 public:
};

FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_0_RX)
}
FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX(const FLASH_CELLBOARD_0_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_0_RX)
}

inline void FLASH_CELLBOARD_0_RX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_0_RX::~FLASH_CELLBOARD_0_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_0_RX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_0_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_0_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_0_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_0_RX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_0_RX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_0_RX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_0_RX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_0_RX)
  return target;
}

size_t FLASH_CELLBOARD_0_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_0_RX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_0_RX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_0_RX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_0_RX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_0_RX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_0_RX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_0_RX &>(from));
}


void FLASH_CELLBOARD_0_RX::MergeFrom(const FLASH_CELLBOARD_0_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_0_RX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_0_RX::CopyFrom(const FLASH_CELLBOARD_0_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_0_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_0_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_0_RX::InternalSwap(FLASH_CELLBOARD_0_RX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_0_RX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[21]);
}

// ===================================================================

class FLASH_CELLBOARD_1_TX::_Internal {
 public:
};

FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_1_TX)
}
FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX(const FLASH_CELLBOARD_1_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_1_TX)
}

inline void FLASH_CELLBOARD_1_TX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_1_TX::~FLASH_CELLBOARD_1_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_1_TX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_1_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_1_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_1_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_1_TX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_1_TX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_1_TX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_1_TX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_1_TX)
  return target;
}

size_t FLASH_CELLBOARD_1_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_1_TX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_1_TX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_1_TX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_1_TX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_1_TX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_1_TX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_1_TX &>(from));
}


void FLASH_CELLBOARD_1_TX::MergeFrom(const FLASH_CELLBOARD_1_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_1_TX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_1_TX::CopyFrom(const FLASH_CELLBOARD_1_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_1_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_1_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_1_TX::InternalSwap(FLASH_CELLBOARD_1_TX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_1_TX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[22]);
}

// ===================================================================

class FLASH_CELLBOARD_1_RX::_Internal {
 public:
};

FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_1_RX)
}
FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX(const FLASH_CELLBOARD_1_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_1_RX)
}

inline void FLASH_CELLBOARD_1_RX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_1_RX::~FLASH_CELLBOARD_1_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_1_RX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_1_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_1_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_1_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_1_RX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_1_RX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_1_RX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_1_RX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_1_RX)
  return target;
}

size_t FLASH_CELLBOARD_1_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_1_RX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_1_RX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_1_RX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_1_RX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_1_RX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_1_RX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_1_RX &>(from));
}


void FLASH_CELLBOARD_1_RX::MergeFrom(const FLASH_CELLBOARD_1_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_1_RX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_1_RX::CopyFrom(const FLASH_CELLBOARD_1_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_1_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_1_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_1_RX::InternalSwap(FLASH_CELLBOARD_1_RX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_1_RX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[23]);
}

// ===================================================================

class FLASH_CELLBOARD_2_TX::_Internal {
 public:
};

FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_2_TX)
}
FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX(const FLASH_CELLBOARD_2_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_2_TX)
}

inline void FLASH_CELLBOARD_2_TX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_2_TX::~FLASH_CELLBOARD_2_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_2_TX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_2_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_2_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_2_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_2_TX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_2_TX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_2_TX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_2_TX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_2_TX)
  return target;
}

size_t FLASH_CELLBOARD_2_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_2_TX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_2_TX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_2_TX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_2_TX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_2_TX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_2_TX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_2_TX &>(from));
}


void FLASH_CELLBOARD_2_TX::MergeFrom(const FLASH_CELLBOARD_2_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_2_TX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_2_TX::CopyFrom(const FLASH_CELLBOARD_2_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_2_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_2_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_2_TX::InternalSwap(FLASH_CELLBOARD_2_TX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_2_TX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[24]);
}

// ===================================================================

class FLASH_CELLBOARD_2_RX::_Internal {
 public:
};

FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_2_RX)
}
FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX(const FLASH_CELLBOARD_2_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_2_RX)
}

inline void FLASH_CELLBOARD_2_RX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_2_RX::~FLASH_CELLBOARD_2_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_2_RX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_2_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_2_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_2_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_2_RX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_2_RX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_2_RX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_2_RX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_2_RX)
  return target;
}

size_t FLASH_CELLBOARD_2_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_2_RX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_2_RX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_2_RX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_2_RX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_2_RX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_2_RX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_2_RX &>(from));
}


void FLASH_CELLBOARD_2_RX::MergeFrom(const FLASH_CELLBOARD_2_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_2_RX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_2_RX::CopyFrom(const FLASH_CELLBOARD_2_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_2_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_2_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_2_RX::InternalSwap(FLASH_CELLBOARD_2_RX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_2_RX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[25]);
}

// ===================================================================

class FLASH_CELLBOARD_3_TX::_Internal {
 public:
};

FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_3_TX)
}
FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX(const FLASH_CELLBOARD_3_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_3_TX)
}

inline void FLASH_CELLBOARD_3_TX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_3_TX::~FLASH_CELLBOARD_3_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_3_TX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_3_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_3_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_3_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_3_TX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_3_TX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_3_TX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_3_TX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_3_TX)
  return target;
}

size_t FLASH_CELLBOARD_3_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_3_TX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_3_TX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_3_TX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_3_TX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_3_TX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_3_TX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_3_TX &>(from));
}


void FLASH_CELLBOARD_3_TX::MergeFrom(const FLASH_CELLBOARD_3_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_3_TX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_3_TX::CopyFrom(const FLASH_CELLBOARD_3_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_3_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_3_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_3_TX::InternalSwap(FLASH_CELLBOARD_3_TX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_3_TX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[26]);
}

// ===================================================================

class FLASH_CELLBOARD_3_RX::_Internal {
 public:
};

FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_3_RX)
}
FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX(const FLASH_CELLBOARD_3_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_3_RX)
}

inline void FLASH_CELLBOARD_3_RX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_3_RX::~FLASH_CELLBOARD_3_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_3_RX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_3_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_3_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_3_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_3_RX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_3_RX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_3_RX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_3_RX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_3_RX)
  return target;
}

size_t FLASH_CELLBOARD_3_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_3_RX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_3_RX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_3_RX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_3_RX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_3_RX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_3_RX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_3_RX &>(from));
}


void FLASH_CELLBOARD_3_RX::MergeFrom(const FLASH_CELLBOARD_3_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_3_RX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_3_RX::CopyFrom(const FLASH_CELLBOARD_3_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_3_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_3_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_3_RX::InternalSwap(FLASH_CELLBOARD_3_RX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_3_RX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[27]);
}

// ===================================================================

class FLASH_CELLBOARD_4_TX::_Internal {
 public:
};

FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_4_TX)
}
FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX(const FLASH_CELLBOARD_4_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_4_TX)
}

inline void FLASH_CELLBOARD_4_TX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_4_TX::~FLASH_CELLBOARD_4_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_4_TX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_4_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_4_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_4_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_4_TX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_4_TX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_4_TX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_4_TX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_4_TX)
  return target;
}

size_t FLASH_CELLBOARD_4_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_4_TX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_4_TX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_4_TX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_4_TX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_4_TX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_4_TX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_4_TX &>(from));
}


void FLASH_CELLBOARD_4_TX::MergeFrom(const FLASH_CELLBOARD_4_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_4_TX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_4_TX::CopyFrom(const FLASH_CELLBOARD_4_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_4_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_4_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_4_TX::InternalSwap(FLASH_CELLBOARD_4_TX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_4_TX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[28]);
}

// ===================================================================

class FLASH_CELLBOARD_4_RX::_Internal {
 public:
};

FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_4_RX)
}
FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX(const FLASH_CELLBOARD_4_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_4_RX)
}

inline void FLASH_CELLBOARD_4_RX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_4_RX::~FLASH_CELLBOARD_4_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_4_RX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_4_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_4_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_4_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_4_RX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_4_RX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_4_RX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_4_RX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_4_RX)
  return target;
}

size_t FLASH_CELLBOARD_4_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_4_RX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_4_RX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_4_RX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_4_RX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_4_RX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_4_RX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_4_RX &>(from));
}


void FLASH_CELLBOARD_4_RX::MergeFrom(const FLASH_CELLBOARD_4_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_4_RX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_4_RX::CopyFrom(const FLASH_CELLBOARD_4_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_4_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_4_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_4_RX::InternalSwap(FLASH_CELLBOARD_4_RX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_4_RX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[29]);
}

// ===================================================================

class FLASH_CELLBOARD_5_TX::_Internal {
 public:
};

FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_5_TX)
}
FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX(const FLASH_CELLBOARD_5_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_5_TX)
}

inline void FLASH_CELLBOARD_5_TX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_5_TX::~FLASH_CELLBOARD_5_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_5_TX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_5_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_5_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_5_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_5_TX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_5_TX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_5_TX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_5_TX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_5_TX)
  return target;
}

size_t FLASH_CELLBOARD_5_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_5_TX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_5_TX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_5_TX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_5_TX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_5_TX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_5_TX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_5_TX &>(from));
}


void FLASH_CELLBOARD_5_TX::MergeFrom(const FLASH_CELLBOARD_5_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_5_TX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_5_TX::CopyFrom(const FLASH_CELLBOARD_5_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_5_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_5_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_5_TX::InternalSwap(FLASH_CELLBOARD_5_TX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_5_TX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[30]);
}

// ===================================================================

class FLASH_CELLBOARD_5_RX::_Internal {
 public:
};

FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_5_RX)
}
FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX(const FLASH_CELLBOARD_5_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_5_RX)
}

inline void FLASH_CELLBOARD_5_RX::SharedCtor() {
_inner_timestamp_ = uint64_t{0u};
}

FLASH_CELLBOARD_5_RX::~FLASH_CELLBOARD_5_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_5_RX)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FLASH_CELLBOARD_5_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FLASH_CELLBOARD_5_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FLASH_CELLBOARD_5_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_5_RX)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_5_RX::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FLASH_CELLBOARD_5_RX::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_5_RX)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_5_RX)
  return target;
}

size_t FLASH_CELLBOARD_5_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_5_RX)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_internal__inner_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal__inner_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FLASH_CELLBOARD_5_RX::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FLASH_CELLBOARD_5_RX::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FLASH_CELLBOARD_5_RX::GetClassData() const { return &_class_data_; }

void FLASH_CELLBOARD_5_RX::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FLASH_CELLBOARD_5_RX *>(to)->MergeFrom(
      static_cast<const FLASH_CELLBOARD_5_RX &>(from));
}


void FLASH_CELLBOARD_5_RX::MergeFrom(const FLASH_CELLBOARD_5_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_5_RX)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal__inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FLASH_CELLBOARD_5_RX::CopyFrom(const FLASH_CELLBOARD_5_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_5_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_5_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_5_RX::InternalSwap(FLASH_CELLBOARD_5_RX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_5_RX::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[31]);
}

// ===================================================================

class Pack::_Internal {
 public:
};

Pack::Pack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  board_status_cellboard0_(arena),
  board_status_cellboard1_(arena),
  board_status_cellboard2_(arena),
  board_status_cellboard3_(arena),
  board_status_cellboard4_(arena),
  board_status_cellboard5_(arena),
  temperatures_cellboard0_(arena),
  temperatures_cellboard1_(arena),
  temperatures_cellboard2_(arena),
  temperatures_cellboard3_(arena),
  temperatures_cellboard4_(arena),
  temperatures_cellboard5_(arena),
  voltages_cellboard0_(arena),
  voltages_cellboard1_(arena),
  voltages_cellboard2_(arena),
  voltages_cellboard3_(arena),
  voltages_cellboard4_(arena),
  voltages_cellboard5_(arena),
  balancing_(arena),
  fw_update_(arena),
  flash_cellboard_0_tx_(arena),
  flash_cellboard_0_rx_(arena),
  flash_cellboard_1_tx_(arena),
  flash_cellboard_1_rx_(arena),
  flash_cellboard_2_tx_(arena),
  flash_cellboard_2_rx_(arena),
  flash_cellboard_3_tx_(arena),
  flash_cellboard_3_rx_(arena),
  flash_cellboard_4_tx_(arena),
  flash_cellboard_4_rx_(arena),
  flash_cellboard_5_tx_(arena),
  flash_cellboard_5_rx_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:bms.Pack)
}
Pack::Pack(const Pack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      board_status_cellboard0_(from.board_status_cellboard0_),
      board_status_cellboard1_(from.board_status_cellboard1_),
      board_status_cellboard2_(from.board_status_cellboard2_),
      board_status_cellboard3_(from.board_status_cellboard3_),
      board_status_cellboard4_(from.board_status_cellboard4_),
      board_status_cellboard5_(from.board_status_cellboard5_),
      temperatures_cellboard0_(from.temperatures_cellboard0_),
      temperatures_cellboard1_(from.temperatures_cellboard1_),
      temperatures_cellboard2_(from.temperatures_cellboard2_),
      temperatures_cellboard3_(from.temperatures_cellboard3_),
      temperatures_cellboard4_(from.temperatures_cellboard4_),
      temperatures_cellboard5_(from.temperatures_cellboard5_),
      voltages_cellboard0_(from.voltages_cellboard0_),
      voltages_cellboard1_(from.voltages_cellboard1_),
      voltages_cellboard2_(from.voltages_cellboard2_),
      voltages_cellboard3_(from.voltages_cellboard3_),
      voltages_cellboard4_(from.voltages_cellboard4_),
      voltages_cellboard5_(from.voltages_cellboard5_),
      balancing_(from.balancing_),
      fw_update_(from.fw_update_),
      flash_cellboard_0_tx_(from.flash_cellboard_0_tx_),
      flash_cellboard_0_rx_(from.flash_cellboard_0_rx_),
      flash_cellboard_1_tx_(from.flash_cellboard_1_tx_),
      flash_cellboard_1_rx_(from.flash_cellboard_1_rx_),
      flash_cellboard_2_tx_(from.flash_cellboard_2_tx_),
      flash_cellboard_2_rx_(from.flash_cellboard_2_rx_),
      flash_cellboard_3_tx_(from.flash_cellboard_3_tx_),
      flash_cellboard_3_rx_(from.flash_cellboard_3_rx_),
      flash_cellboard_4_tx_(from.flash_cellboard_4_tx_),
      flash_cellboard_4_rx_(from.flash_cellboard_4_rx_),
      flash_cellboard_5_tx_(from.flash_cellboard_5_tx_),
      flash_cellboard_5_rx_(from.flash_cellboard_5_rx_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bms.Pack)
}

inline void Pack::SharedCtor() {
}

Pack::~Pack() {
  // @@protoc_insertion_point(destructor:bms.Pack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Pack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Pack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Pack::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.Pack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  board_status_cellboard0_.Clear();
  board_status_cellboard1_.Clear();
  board_status_cellboard2_.Clear();
  board_status_cellboard3_.Clear();
  board_status_cellboard4_.Clear();
  board_status_cellboard5_.Clear();
  temperatures_cellboard0_.Clear();
  temperatures_cellboard1_.Clear();
  temperatures_cellboard2_.Clear();
  temperatures_cellboard3_.Clear();
  temperatures_cellboard4_.Clear();
  temperatures_cellboard5_.Clear();
  voltages_cellboard0_.Clear();
  voltages_cellboard1_.Clear();
  voltages_cellboard2_.Clear();
  voltages_cellboard3_.Clear();
  voltages_cellboard4_.Clear();
  voltages_cellboard5_.Clear();
  balancing_.Clear();
  fw_update_.Clear();
  flash_cellboard_0_tx_.Clear();
  flash_cellboard_0_rx_.Clear();
  flash_cellboard_1_tx_.Clear();
  flash_cellboard_1_rx_.Clear();
  flash_cellboard_2_tx_.Clear();
  flash_cellboard_2_rx_.Clear();
  flash_cellboard_3_tx_.Clear();
  flash_cellboard_3_rx_.Clear();
  flash_cellboard_4_tx_.Clear();
  flash_cellboard_4_rx_.Clear();
  flash_cellboard_5_tx_.Clear();
  flash_cellboard_5_rx_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .bms.BOARD_STATUS_CELLBOARD0 BOARD_STATUS_CELLBOARD0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status_cellboard0(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.BOARD_STATUS_CELLBOARD1 BOARD_STATUS_CELLBOARD1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status_cellboard1(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.BOARD_STATUS_CELLBOARD2 BOARD_STATUS_CELLBOARD2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status_cellboard2(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.BOARD_STATUS_CELLBOARD3 BOARD_STATUS_CELLBOARD3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status_cellboard3(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.BOARD_STATUS_CELLBOARD4 BOARD_STATUS_CELLBOARD4 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status_cellboard4(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.BOARD_STATUS_CELLBOARD5 BOARD_STATUS_CELLBOARD5 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status_cellboard5(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES_CELLBOARD0 TEMPERATURES_CELLBOARD0 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures_cellboard0(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES_CELLBOARD1 TEMPERATURES_CELLBOARD1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures_cellboard1(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES_CELLBOARD2 TEMPERATURES_CELLBOARD2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures_cellboard2(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES_CELLBOARD3 TEMPERATURES_CELLBOARD3 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures_cellboard3(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES_CELLBOARD4 TEMPERATURES_CELLBOARD4 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures_cellboard4(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES_CELLBOARD5 TEMPERATURES_CELLBOARD5 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures_cellboard5(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES_CELLBOARD0 VOLTAGES_CELLBOARD0 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_voltages_cellboard0(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES_CELLBOARD1 VOLTAGES_CELLBOARD1 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_voltages_cellboard1(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES_CELLBOARD2 VOLTAGES_CELLBOARD2 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_voltages_cellboard2(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES_CELLBOARD3 VOLTAGES_CELLBOARD3 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_voltages_cellboard3(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES_CELLBOARD4 VOLTAGES_CELLBOARD4 = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_voltages_cellboard4(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES_CELLBOARD5 VOLTAGES_CELLBOARD5 = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_voltages_cellboard5(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.BALANCING BALANCING = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_balancing(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FW_UPDATE FW_UPDATE = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_fw_update(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_0_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_0_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_1_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_1_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<194>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_2_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_2_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_3_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_3_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_4_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_4_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_5_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<250>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_5_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<258>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Pack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.Pack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bms.BOARD_STATUS_CELLBOARD0 BOARD_STATUS_CELLBOARD0 = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_board_status_cellboard0_size()); i < n; i++) {
    const auto& repfield = this->_internal_board_status_cellboard0(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD1 BOARD_STATUS_CELLBOARD1 = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_board_status_cellboard1_size()); i < n; i++) {
    const auto& repfield = this->_internal_board_status_cellboard1(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD2 BOARD_STATUS_CELLBOARD2 = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_board_status_cellboard2_size()); i < n; i++) {
    const auto& repfield = this->_internal_board_status_cellboard2(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD3 BOARD_STATUS_CELLBOARD3 = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_board_status_cellboard3_size()); i < n; i++) {
    const auto& repfield = this->_internal_board_status_cellboard3(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD4 BOARD_STATUS_CELLBOARD4 = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_board_status_cellboard4_size()); i < n; i++) {
    const auto& repfield = this->_internal_board_status_cellboard4(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD5 BOARD_STATUS_CELLBOARD5 = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_board_status_cellboard5_size()); i < n; i++) {
    const auto& repfield = this->_internal_board_status_cellboard5(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD0 TEMPERATURES_CELLBOARD0 = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_temperatures_cellboard0_size()); i < n; i++) {
    const auto& repfield = this->_internal_temperatures_cellboard0(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD1 TEMPERATURES_CELLBOARD1 = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_temperatures_cellboard1_size()); i < n; i++) {
    const auto& repfield = this->_internal_temperatures_cellboard1(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD2 TEMPERATURES_CELLBOARD2 = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_temperatures_cellboard2_size()); i < n; i++) {
    const auto& repfield = this->_internal_temperatures_cellboard2(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD3 TEMPERATURES_CELLBOARD3 = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_temperatures_cellboard3_size()); i < n; i++) {
    const auto& repfield = this->_internal_temperatures_cellboard3(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD4 TEMPERATURES_CELLBOARD4 = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_temperatures_cellboard4_size()); i < n; i++) {
    const auto& repfield = this->_internal_temperatures_cellboard4(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD5 TEMPERATURES_CELLBOARD5 = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_temperatures_cellboard5_size()); i < n; i++) {
    const auto& repfield = this->_internal_temperatures_cellboard5(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.VOLTAGES_CELLBOARD0 VOLTAGES_CELLBOARD0 = 13;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_voltages_cellboard0_size()); i < n; i++) {
    const auto& repfield = this->_internal_voltages_cellboard0(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(13, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.VOLTAGES_CELLBOARD1 VOLTAGES_CELLBOARD1 = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_voltages_cellboard1_size()); i < n; i++) {
    const auto& repfield = this->_internal_voltages_cellboard1(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.VOLTAGES_CELLBOARD2 VOLTAGES_CELLBOARD2 = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_voltages_cellboard2_size()); i < n; i++) {
    const auto& repfield = this->_internal_voltages_cellboard2(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.VOLTAGES_CELLBOARD3 VOLTAGES_CELLBOARD3 = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_voltages_cellboard3_size()); i < n; i++) {
    const auto& repfield = this->_internal_voltages_cellboard3(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.VOLTAGES_CELLBOARD4 VOLTAGES_CELLBOARD4 = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_voltages_cellboard4_size()); i < n; i++) {
    const auto& repfield = this->_internal_voltages_cellboard4(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.VOLTAGES_CELLBOARD5 VOLTAGES_CELLBOARD5 = 18;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_voltages_cellboard5_size()); i < n; i++) {
    const auto& repfield = this->_internal_voltages_cellboard5(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(18, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.BALANCING BALANCING = 19;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_balancing_size()); i < n; i++) {
    const auto& repfield = this->_internal_balancing(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(19, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FW_UPDATE FW_UPDATE = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fw_update_size()); i < n; i++) {
    const auto& repfield = this->_internal_fw_update(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 21;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_0_tx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_0_tx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(21, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_0_rx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_0_rx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 23;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_1_tx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_1_tx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(23, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 24;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_1_rx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_1_rx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(24, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_2_tx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_2_tx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 26;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_2_rx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_2_rx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(26, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 27;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_3_tx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_3_tx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(27, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 28;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_3_rx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_3_rx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(28, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 29;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_4_tx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_4_tx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(29, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 30;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_4_rx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_4_rx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(30, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 31;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_5_tx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_5_tx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(31, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 32;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_flash_cellboard_5_rx_size()); i < n; i++) {
    const auto& repfield = this->_internal_flash_cellboard_5_rx(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(32, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.Pack)
  return target;
}

size_t Pack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.Pack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bms.BOARD_STATUS_CELLBOARD0 BOARD_STATUS_CELLBOARD0 = 1;
  total_size += 1UL * this->_internal_board_status_cellboard0_size();
  for (const auto& msg : this->board_status_cellboard0_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD1 BOARD_STATUS_CELLBOARD1 = 2;
  total_size += 1UL * this->_internal_board_status_cellboard1_size();
  for (const auto& msg : this->board_status_cellboard1_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD2 BOARD_STATUS_CELLBOARD2 = 3;
  total_size += 1UL * this->_internal_board_status_cellboard2_size();
  for (const auto& msg : this->board_status_cellboard2_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD3 BOARD_STATUS_CELLBOARD3 = 4;
  total_size += 1UL * this->_internal_board_status_cellboard3_size();
  for (const auto& msg : this->board_status_cellboard3_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD4 BOARD_STATUS_CELLBOARD4 = 5;
  total_size += 1UL * this->_internal_board_status_cellboard4_size();
  for (const auto& msg : this->board_status_cellboard4_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BOARD_STATUS_CELLBOARD5 BOARD_STATUS_CELLBOARD5 = 6;
  total_size += 1UL * this->_internal_board_status_cellboard5_size();
  for (const auto& msg : this->board_status_cellboard5_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD0 TEMPERATURES_CELLBOARD0 = 7;
  total_size += 1UL * this->_internal_temperatures_cellboard0_size();
  for (const auto& msg : this->temperatures_cellboard0_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD1 TEMPERATURES_CELLBOARD1 = 8;
  total_size += 1UL * this->_internal_temperatures_cellboard1_size();
  for (const auto& msg : this->temperatures_cellboard1_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD2 TEMPERATURES_CELLBOARD2 = 9;
  total_size += 1UL * this->_internal_temperatures_cellboard2_size();
  for (const auto& msg : this->temperatures_cellboard2_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD3 TEMPERATURES_CELLBOARD3 = 10;
  total_size += 1UL * this->_internal_temperatures_cellboard3_size();
  for (const auto& msg : this->temperatures_cellboard3_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD4 TEMPERATURES_CELLBOARD4 = 11;
  total_size += 1UL * this->_internal_temperatures_cellboard4_size();
  for (const auto& msg : this->temperatures_cellboard4_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES_CELLBOARD5 TEMPERATURES_CELLBOARD5 = 12;
  total_size += 1UL * this->_internal_temperatures_cellboard5_size();
  for (const auto& msg : this->temperatures_cellboard5_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES_CELLBOARD0 VOLTAGES_CELLBOARD0 = 13;
  total_size += 1UL * this->_internal_voltages_cellboard0_size();
  for (const auto& msg : this->voltages_cellboard0_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES_CELLBOARD1 VOLTAGES_CELLBOARD1 = 14;
  total_size += 1UL * this->_internal_voltages_cellboard1_size();
  for (const auto& msg : this->voltages_cellboard1_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES_CELLBOARD2 VOLTAGES_CELLBOARD2 = 15;
  total_size += 1UL * this->_internal_voltages_cellboard2_size();
  for (const auto& msg : this->voltages_cellboard2_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES_CELLBOARD3 VOLTAGES_CELLBOARD3 = 16;
  total_size += 2UL * this->_internal_voltages_cellboard3_size();
  for (const auto& msg : this->voltages_cellboard3_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES_CELLBOARD4 VOLTAGES_CELLBOARD4 = 17;
  total_size += 2UL * this->_internal_voltages_cellboard4_size();
  for (const auto& msg : this->voltages_cellboard4_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES_CELLBOARD5 VOLTAGES_CELLBOARD5 = 18;
  total_size += 2UL * this->_internal_voltages_cellboard5_size();
  for (const auto& msg : this->voltages_cellboard5_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BALANCING BALANCING = 19;
  total_size += 2UL * this->_internal_balancing_size();
  for (const auto& msg : this->balancing_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FW_UPDATE FW_UPDATE = 20;
  total_size += 2UL * this->_internal_fw_update_size();
  for (const auto& msg : this->fw_update_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 21;
  total_size += 2UL * this->_internal_flash_cellboard_0_tx_size();
  for (const auto& msg : this->flash_cellboard_0_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 22;
  total_size += 2UL * this->_internal_flash_cellboard_0_rx_size();
  for (const auto& msg : this->flash_cellboard_0_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 23;
  total_size += 2UL * this->_internal_flash_cellboard_1_tx_size();
  for (const auto& msg : this->flash_cellboard_1_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 24;
  total_size += 2UL * this->_internal_flash_cellboard_1_rx_size();
  for (const auto& msg : this->flash_cellboard_1_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 25;
  total_size += 2UL * this->_internal_flash_cellboard_2_tx_size();
  for (const auto& msg : this->flash_cellboard_2_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 26;
  total_size += 2UL * this->_internal_flash_cellboard_2_rx_size();
  for (const auto& msg : this->flash_cellboard_2_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 27;
  total_size += 2UL * this->_internal_flash_cellboard_3_tx_size();
  for (const auto& msg : this->flash_cellboard_3_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 28;
  total_size += 2UL * this->_internal_flash_cellboard_3_rx_size();
  for (const auto& msg : this->flash_cellboard_3_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 29;
  total_size += 2UL * this->_internal_flash_cellboard_4_tx_size();
  for (const auto& msg : this->flash_cellboard_4_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 30;
  total_size += 2UL * this->_internal_flash_cellboard_4_rx_size();
  for (const auto& msg : this->flash_cellboard_4_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 31;
  total_size += 2UL * this->_internal_flash_cellboard_5_tx_size();
  for (const auto& msg : this->flash_cellboard_5_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 32;
  total_size += 2UL * this->_internal_flash_cellboard_5_rx_size();
  for (const auto& msg : this->flash_cellboard_5_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Pack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Pack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Pack::GetClassData() const { return &_class_data_; }

void Pack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Pack *>(to)->MergeFrom(
      static_cast<const Pack &>(from));
}


void Pack::MergeFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.Pack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  board_status_cellboard0_.MergeFrom(from.board_status_cellboard0_);
  board_status_cellboard1_.MergeFrom(from.board_status_cellboard1_);
  board_status_cellboard2_.MergeFrom(from.board_status_cellboard2_);
  board_status_cellboard3_.MergeFrom(from.board_status_cellboard3_);
  board_status_cellboard4_.MergeFrom(from.board_status_cellboard4_);
  board_status_cellboard5_.MergeFrom(from.board_status_cellboard5_);
  temperatures_cellboard0_.MergeFrom(from.temperatures_cellboard0_);
  temperatures_cellboard1_.MergeFrom(from.temperatures_cellboard1_);
  temperatures_cellboard2_.MergeFrom(from.temperatures_cellboard2_);
  temperatures_cellboard3_.MergeFrom(from.temperatures_cellboard3_);
  temperatures_cellboard4_.MergeFrom(from.temperatures_cellboard4_);
  temperatures_cellboard5_.MergeFrom(from.temperatures_cellboard5_);
  voltages_cellboard0_.MergeFrom(from.voltages_cellboard0_);
  voltages_cellboard1_.MergeFrom(from.voltages_cellboard1_);
  voltages_cellboard2_.MergeFrom(from.voltages_cellboard2_);
  voltages_cellboard3_.MergeFrom(from.voltages_cellboard3_);
  voltages_cellboard4_.MergeFrom(from.voltages_cellboard4_);
  voltages_cellboard5_.MergeFrom(from.voltages_cellboard5_);
  balancing_.MergeFrom(from.balancing_);
  fw_update_.MergeFrom(from.fw_update_);
  flash_cellboard_0_tx_.MergeFrom(from.flash_cellboard_0_tx_);
  flash_cellboard_0_rx_.MergeFrom(from.flash_cellboard_0_rx_);
  flash_cellboard_1_tx_.MergeFrom(from.flash_cellboard_1_tx_);
  flash_cellboard_1_rx_.MergeFrom(from.flash_cellboard_1_rx_);
  flash_cellboard_2_tx_.MergeFrom(from.flash_cellboard_2_tx_);
  flash_cellboard_2_rx_.MergeFrom(from.flash_cellboard_2_rx_);
  flash_cellboard_3_tx_.MergeFrom(from.flash_cellboard_3_tx_);
  flash_cellboard_3_rx_.MergeFrom(from.flash_cellboard_3_rx_);
  flash_cellboard_4_tx_.MergeFrom(from.flash_cellboard_4_tx_);
  flash_cellboard_4_rx_.MergeFrom(from.flash_cellboard_4_rx_);
  flash_cellboard_5_tx_.MergeFrom(from.flash_cellboard_5_tx_);
  flash_cellboard_5_rx_.MergeFrom(from.flash_cellboard_5_rx_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Pack::CopyFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pack::IsInitialized() const {
  return true;
}

void Pack::InternalSwap(Pack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  board_status_cellboard0_.InternalSwap(&other->board_status_cellboard0_);
  board_status_cellboard1_.InternalSwap(&other->board_status_cellboard1_);
  board_status_cellboard2_.InternalSwap(&other->board_status_cellboard2_);
  board_status_cellboard3_.InternalSwap(&other->board_status_cellboard3_);
  board_status_cellboard4_.InternalSwap(&other->board_status_cellboard4_);
  board_status_cellboard5_.InternalSwap(&other->board_status_cellboard5_);
  temperatures_cellboard0_.InternalSwap(&other->temperatures_cellboard0_);
  temperatures_cellboard1_.InternalSwap(&other->temperatures_cellboard1_);
  temperatures_cellboard2_.InternalSwap(&other->temperatures_cellboard2_);
  temperatures_cellboard3_.InternalSwap(&other->temperatures_cellboard3_);
  temperatures_cellboard4_.InternalSwap(&other->temperatures_cellboard4_);
  temperatures_cellboard5_.InternalSwap(&other->temperatures_cellboard5_);
  voltages_cellboard0_.InternalSwap(&other->voltages_cellboard0_);
  voltages_cellboard1_.InternalSwap(&other->voltages_cellboard1_);
  voltages_cellboard2_.InternalSwap(&other->voltages_cellboard2_);
  voltages_cellboard3_.InternalSwap(&other->voltages_cellboard3_);
  voltages_cellboard4_.InternalSwap(&other->voltages_cellboard4_);
  voltages_cellboard5_.InternalSwap(&other->voltages_cellboard5_);
  balancing_.InternalSwap(&other->balancing_);
  fw_update_.InternalSwap(&other->fw_update_);
  flash_cellboard_0_tx_.InternalSwap(&other->flash_cellboard_0_tx_);
  flash_cellboard_0_rx_.InternalSwap(&other->flash_cellboard_0_rx_);
  flash_cellboard_1_tx_.InternalSwap(&other->flash_cellboard_1_tx_);
  flash_cellboard_1_rx_.InternalSwap(&other->flash_cellboard_1_rx_);
  flash_cellboard_2_tx_.InternalSwap(&other->flash_cellboard_2_tx_);
  flash_cellboard_2_rx_.InternalSwap(&other->flash_cellboard_2_rx_);
  flash_cellboard_3_tx_.InternalSwap(&other->flash_cellboard_3_tx_);
  flash_cellboard_3_rx_.InternalSwap(&other->flash_cellboard_3_rx_);
  flash_cellboard_4_tx_.InternalSwap(&other->flash_cellboard_4_tx_);
  flash_cellboard_4_rx_.InternalSwap(&other->flash_cellboard_4_rx_);
  flash_cellboard_5_tx_.InternalSwap(&other->flash_cellboard_5_tx_);
  flash_cellboard_5_rx_.InternalSwap(&other->flash_cellboard_5_rx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bms_2eproto_getter, &descriptor_table_bms_2eproto_once,
      file_level_metadata_bms_2eproto[32]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace bms
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS_CELLBOARD0*
Arena::CreateMaybeMessage< ::bms::BOARD_STATUS_CELLBOARD0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS_CELLBOARD0 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS_CELLBOARD1*
Arena::CreateMaybeMessage< ::bms::BOARD_STATUS_CELLBOARD1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS_CELLBOARD1 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS_CELLBOARD2*
Arena::CreateMaybeMessage< ::bms::BOARD_STATUS_CELLBOARD2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS_CELLBOARD2 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS_CELLBOARD3*
Arena::CreateMaybeMessage< ::bms::BOARD_STATUS_CELLBOARD3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS_CELLBOARD3 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS_CELLBOARD4*
Arena::CreateMaybeMessage< ::bms::BOARD_STATUS_CELLBOARD4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS_CELLBOARD4 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS_CELLBOARD5*
Arena::CreateMaybeMessage< ::bms::BOARD_STATUS_CELLBOARD5 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS_CELLBOARD5 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES_CELLBOARD0*
Arena::CreateMaybeMessage< ::bms::TEMPERATURES_CELLBOARD0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES_CELLBOARD0 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES_CELLBOARD1*
Arena::CreateMaybeMessage< ::bms::TEMPERATURES_CELLBOARD1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES_CELLBOARD1 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES_CELLBOARD2*
Arena::CreateMaybeMessage< ::bms::TEMPERATURES_CELLBOARD2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES_CELLBOARD2 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES_CELLBOARD3*
Arena::CreateMaybeMessage< ::bms::TEMPERATURES_CELLBOARD3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES_CELLBOARD3 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES_CELLBOARD4*
Arena::CreateMaybeMessage< ::bms::TEMPERATURES_CELLBOARD4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES_CELLBOARD4 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES_CELLBOARD5*
Arena::CreateMaybeMessage< ::bms::TEMPERATURES_CELLBOARD5 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES_CELLBOARD5 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES_CELLBOARD0*
Arena::CreateMaybeMessage< ::bms::VOLTAGES_CELLBOARD0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES_CELLBOARD0 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES_CELLBOARD1*
Arena::CreateMaybeMessage< ::bms::VOLTAGES_CELLBOARD1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES_CELLBOARD1 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES_CELLBOARD2*
Arena::CreateMaybeMessage< ::bms::VOLTAGES_CELLBOARD2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES_CELLBOARD2 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES_CELLBOARD3*
Arena::CreateMaybeMessage< ::bms::VOLTAGES_CELLBOARD3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES_CELLBOARD3 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES_CELLBOARD4*
Arena::CreateMaybeMessage< ::bms::VOLTAGES_CELLBOARD4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES_CELLBOARD4 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES_CELLBOARD5*
Arena::CreateMaybeMessage< ::bms::VOLTAGES_CELLBOARD5 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES_CELLBOARD5 >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BALANCING*
Arena::CreateMaybeMessage< ::bms::BALANCING >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BALANCING >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FW_UPDATE*
Arena::CreateMaybeMessage< ::bms::FW_UPDATE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FW_UPDATE >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_0_TX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_0_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_0_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_0_RX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_0_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_0_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_1_TX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_1_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_1_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_1_RX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_1_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_1_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_2_TX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_2_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_2_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_2_RX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_2_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_2_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_3_TX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_3_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_3_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_3_RX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_3_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_3_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_4_TX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_4_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_4_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_4_RX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_4_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_4_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_5_TX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_5_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_5_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_5_RX*
Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_5_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_5_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::Pack*
Arena::CreateMaybeMessage< ::bms::Pack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::Pack >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
