syntax = "proto3";
package primary;

enum RacetypeType {
RACETYPE_ACCELERATION = 0;
RACETYPE_SKIDPAD = 1;
RACETYPE_AUTOCROSS = 2;
RACETYPE_ENDURANCE = 3;
}

enum InverterstatusType {
INVERTERSTATUS_OFF = 0;
INVERTERSTATUS_IDLE = 1;
INVERTERSTATUS_ON = 2;
}

enum CarstatusType {
CARSTATUS_IDLE = 0;
CARSTATUS_SETUP = 1;
CARSTATUS_RUN = 2;
}

enum ToggleType {
TOGGLE_ON = 0;
TOGGLE_OFF = 1;
}

enum TractioncontrolType {
TRACTIONCONTROL_OFF = 0;
TRACTIONCONTROL_SLIP_CONTROL = 1;
TRACTIONCONTROL_TORQUE_VECTORING = 2;
TRACTIONCONTROL_COMPLETE = 3;
}

enum TsstatusType {
TSSTATUS_OFF = 0;
TSSTATUS_PRECHARGE = 1;
TSSTATUS_ON = 2;
TSSTATUS_FATAL = 3;
}

enum MapType {
MAP_R = 0;
MAP_D20 = 1;
MAP_D40 = 2;
MAP_D60 = 3;
MAP_D80 = 4;
MAP_D100 = 5;
}

enum SetcarstatusType {
SETCARSTATUS_IDLE = 0;
SETCARSTATUS_RUN = 1;
}

enum BoundType {
BOUND_SET_MAX = 0;
BOUND_SET_MIN = 1;
}

enum PedalType {
PEDAL_ACCELERATOR = 0;
PEDAL_BRAKE = 1;
}

message SteerVersion {
uint32 component_version = 1;
uint32 cancicd_version = 2;
uint64 _timestamp = 3;
}

message DasVersion {
uint32 component_version = 1;
uint32 cancicd_version = 2;
uint64 _timestamp = 3;
}

message HvVersion {
uint32 component_version = 1;
uint32 cancicd_version = 2;
uint64 _timestamp = 3;
}

message LvVersion {
uint32 component_version = 1;
uint32 cancicd_version = 2;
uint64 _timestamp = 3;
}

message TlmVersion {
uint32 component_version = 1;
uint32 cancicd_version = 2;
uint64 _timestamp = 3;
}

message Timestamp {
uint32 timestamp = 1;
}

message SetTlmStatus {
ToggleType tlm_status = 1;
RacetypeType race_type = 2;
uint32 driver = 3;
uint32 circuit = 4;
uint64 _timestamp = 5;
}

message SteerSystemStatus {
uint32 soc_temp = 1;
uint64 _timestamp = 2;
}

message Marker {
uint64 _timestamp = 1;
}

message TlmStatus {
ToggleType tlm_status = 1;
RacetypeType race_type = 2;
uint32 driver = 3;
uint32 circuit = 4;
uint64 _timestamp = 5;
}

message CarStatus {
InverterstatusType inverter_l = 1;
InverterstatusType inverter_r = 2;
CarstatusType car_status = 3;
uint64 _timestamp = 4;
}

message DasErrors {
uint32 das_error = 1;
uint64 _timestamp = 2;
}

message Speed {
uint32 encoder_r = 1;
uint32 encoder_l = 2;
uint32 inverter_r = 3;
uint32 inverter_l = 4;
uint64 _timestamp = 5;
}

message HvVoltage {
uint32 pack_voltage = 1;
uint32 bus_voltage = 2;
uint32 max_cell_voltage = 3;
uint32 min_cell_voltage = 4;
uint64 _timestamp = 5;
}

message HvCurrent {
uint32 current = 1;
int32 power = 2;
uint64 _timestamp = 3;
}

message HvTemp {
uint32 average_temp = 1;
uint32 max_temp = 2;
uint32 min_temp = 3;
uint64 _timestamp = 4;
}

message HvErrors {
uint32 warnings = 1;
uint32 errors = 2;
uint64 _timestamp = 3;
}

message TsStatus {
TsstatusType ts_status = 1;
uint64 _timestamp = 2;
}

message SetTsStatus {
ToggleType ts_status_set = 1;
uint64 _timestamp = 2;
}

message SetCellBalancingStatus {
ToggleType set_balancing_status = 1;
uint64 _timestamp = 2;
}

message HandcartStatus {
bool connected = 1;
uint64 _timestamp = 2;
}

message SteerStatus {
TractioncontrolType traction_control = 1;
MapType map = 2;
uint64 _timestamp = 3;
}

message SetCarStatus {
SetcarstatusType car_status_set = 1;
uint64 _timestamp = 2;
}

message SetPedalsRange {
BoundType bound = 1;
PedalType pedal = 2;
uint64 _timestamp = 3;
}

message LvCurrent {
uint32 current = 1;
uint64 _timestamp = 2;
}

message LvVoltage {
uint32 voltage_1 = 1;
uint32 voltage_2 = 2;
uint32 voltage_3 = 3;
uint32 voltage_4 = 4;
uint64 _timestamp = 5;
}

message LvTotalVoltage {
uint32 total_voltage = 1;
uint64 _timestamp = 2;
}

message LvTemperature {
uint32 bp_temperature = 1;
uint32 dcdc_temperature = 2;
uint64 _timestamp = 3;
}

message CoolingStatus {
uint32 hv_fan_speed = 1;
uint32 lv_fan_speed = 2;
uint32 pump_speed = 3;
uint64 _timestamp = 4;
}

message HvCellsVoltage {
uint32 cell_index = 1;
uint32 voltage_0 = 2;
uint32 voltage_1 = 3;
uint32 voltage_2 = 4;
uint64 _timestamp = 5;
}

message HvCellsTemp {
uint32 cell_index = 1;
uint32 temp_0 = 2;
uint32 temp_1 = 3;
uint32 temp_2 = 4;
uint32 temp_3 = 5;
uint32 temp_4 = 6;
uint32 temp_5 = 7;
uint32 temp_6 = 8;
uint64 _timestamp = 9;
}

message HvCellBalancingStatus {
ToggleType balancing_status = 1;
uint64 _timestamp = 2;
}

message InvLSetTorque {
uint32 reg_id = 1;
uint32 lsb = 2;
uint32 msb = 3;
uint64 _timestamp = 4;
}

message InvLResponse {
uint32 reg_id = 1;
uint32 data_0 = 2;
uint32 data_1 = 3;
uint32 data_2 = 4;
uint32 data_3 = 5;
uint32 data_4 = 6;
uint32 data_5 = 7;
uint32 data_6 = 8;
uint64 _timestamp = 9;
}

message PrimaryFenice {
repeated SteerVersion steer_version = 1;
repeated DasVersion das_version = 2;
repeated HvVersion hv_version = 3;
repeated LvVersion lv_version = 4;
repeated TlmVersion tlm_version = 5;
repeated Timestamp timestamp = 6;
repeated SetTlmStatus set_tlm_status = 7;
repeated SteerSystemStatus steer_system_status = 8;
repeated Marker marker = 9;
repeated TlmStatus tlm_status = 10;
repeated CarStatus car_status = 11;
repeated DasErrors das_errors = 12;
repeated Speed speed = 13;
repeated HvVoltage hv_voltage = 14;
repeated HvCurrent hv_current = 15;
repeated HvTemp hv_temp = 16;
repeated HvErrors hv_errors = 17;
repeated TsStatus ts_status = 18;
repeated SetTsStatus set_ts_status = 19;
repeated SetCellBalancingStatus set_cell_balancing_status = 20;
repeated HandcartStatus handcart_status = 21;
repeated SteerStatus steer_status = 22;
repeated SetCarStatus set_car_status = 23;
repeated SetPedalsRange set_pedals_range = 24;
repeated LvCurrent lv_current = 25;
repeated LvVoltage lv_voltage = 26;
repeated LvTotalVoltage lv_total_voltage = 27;
repeated LvTemperature lv_temperature = 28;
repeated CoolingStatus cooling_status = 29;
repeated HvCellsVoltage hv_cells_voltage = 30;
repeated HvCellsTemp hv_cells_temp = 31;
repeated HvCellBalancingStatus hv_cell_balancing_status = 32;
repeated InvLSetTorque inv_l_set_torque = 33;
repeated InvLResponse inv_l_response = 34;
}